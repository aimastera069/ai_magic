目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src
檔名：App.jsx
==================================================
/**
 * File: src/App.jsx
 * Description: Harvard Table Builder 主 React 应用组件，管理全局配置状态、字段列表及预览界面。
 * Author: Your Name
 * Date: 2025-03-30
 */

import React, { useState } from 'react';
import { DragDropContext } from 'react-beautiful-dnd';
import GlobalSettings from './components/GlobalSettings';
import FieldTableConfig from './components/FieldTableConfig';
import RowActionSelector from './components/RowActionSelector';
import BulkActionSelector from './components/BulkActionSelector';
import JsonHistoryDropdown from './components/JsonHistoryDropdown';
import StyleThemeSelector from './components/StyleThemeSelector';

function App() {
  const [config, setConfig] = useState({
    meta: {
      id: '',
      title: '',
      table_name: '',
      shortcode: '',
      created_at: '',
      description: '',
    },
    features: {
      search: true,
      pagination: true,
      sortable: true,
      bulk_select: false,
      bulk_actions: [],
      row_actions: [],
      default_sort: { field: '', direction: 'asc' },
    },
    fields: {},
    logic: {},
    css: {
      table_theme: 'dart',
    },
  });

  const [selectedFieldKey, setSelectedFieldKey] = useState(null);
  const [historyFiles, setHistoryFiles] = useState([]);

  const updateGlobal = (section, newData) => {
    setConfig((prev) => ({
      ...prev,
      [section]: { ...prev[section], ...newData },
    }));
  };

  const updateField = (fieldKey, newData) => {
    setConfig((prev) => ({
      ...prev,
      fields: {
        ...prev.fields,
        [fieldKey]: { ...prev.fields[fieldKey], ...newData },
      },
    }));
  };

  const updateFeature = (newData) => {
    setConfig((prev) => ({
      ...prev,
      features: { ...prev.features, ...newData },
    }));
  };

  const loadFieldsFromTable = async (tableName) => {
    if (!tableName) return;
    const now = new Date();
    const id = `${tableName}_${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}_${String(now.getHours()).padStart(2, '0')}${String(now.getMinutes()).padStart(2, '0')}`;

    updateGlobal('meta', {
      id,
      title: id,
      description: id,
      table_name: tableName,
    });

    const res = await fetch(`${window.HTB_CONFIG.rest_url}/table-columns?table=${tableName}`, {
      headers: { 'X-WP-Nonce': window.HTB_CONFIG.nonce },
    });
    const columns = await res.json();
    const newFields = {};
    columns.forEach((col, index) => {
      const key = col.Field;
      newFields[key] = {
        key,
        label: key,
        type: 'text',
        visible: true,
        sortable: false,
        order: index + 1,
      };
    });
    setConfig((prev) => ({ ...prev, fields: newFields }));

    const res2 = await fetch(`${window.HTB_CONFIG.rest_url}/list-configs?table=${tableName}`, {
      headers: { 'X-WP-Nonce': window.HTB_CONFIG.nonce },
    });
    const history = await res2.json();
    setHistoryFiles(history);
  };

  const saveConfig = async () => {
    if (!config.meta.table_name) {
      alert('請填寫資料表名稱');
      return;
    }

    const tableName = config.meta.table_name;
    const timestamp = new Date().toISOString().replace(/[-T:]/g, '').slice(0, 12); // yyyyMMddHHmm
    const id = `${tableName}_${timestamp}`;
    const configWithId = {
      ...config,
      meta: {
        ...config.meta,
        id,
        title: id,
        description: id,
      },
    };

    try {
      const res = await fetch(`${window.HTB_CONFIG.rest_url}/save-config`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-WP-Nonce': window.HTB_CONFIG.nonce,
        },
        body: JSON.stringify(configWithId),
      });
      const json = await res.json();

      const stableRes = await fetch(`${window.HTB_CONFIG.rest_url}/save-config`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-WP-Nonce': window.HTB_CONFIG.nonce,
        },
        body: JSON.stringify({
          ...configWithId,
          meta: {
            ...config.meta,
            id: tableName,
          },
        }),
      });

      if (json.success && stableRes.ok) {
        alert(`✅ 已儲存版本：${json.filename} 及 ${tableName}.json`);
      } else {
        alert(`❌ 儲存失敗：${json.message || '未知錯誤'}`);
      }
    } catch (err) {
      alert('儲存時發生錯誤：' + err.message);
    }
  };

  const downloadConfig = async () => {
    if (!config.meta.id || !config.meta.table_name) {
      alert('請先輸入配置 ID 和資料表名');
      return;
    }
    try {
      const res = await fetch(`${window.HTB_CONFIG.rest_url}/save-config`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-WP-Nonce': window.HTB_CONFIG.nonce,
        },
        body: JSON.stringify(config),
      });
      const json = await res.json();
      if (json.success) {
        const id = json.filename.replace(/\.json$/, '');
        const url = `${window.HTB_CONFIG.rest_url}/download?id=${id}`;
        window.open(url, '_blank');
      } else {
        alert(`❌ 下載失敗：${json.message || '未知錯誤'}`);
      }
    } catch (err) {
      alert('下載錯誤：' + err.message);
    }
  };

  const handleLoadHistory = (jsonData) => {
    setConfig(jsonData);
    setSelectedFieldKey(null);
  };

  const handleApplyHistory = async (filename) => {
    if (!window.confirm(`確認要套用 ${filename}？此操作將覆蓋主檔。`)) return;

    const res = await fetch(`${window.HTB_CONFIG.rest_url}/apply-history`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-WP-Nonce': window.HTB_CONFIG.nonce,
      },
      body: JSON.stringify({ filename }),
    });

    const result = await res.json();
    if (result.success) {
      alert('✅ 已套用歷史版本，請重新載入頁面查看最新狀態');
    } else {
      alert('❌ 套用失敗：' + (result.message || '未知錯誤'));
    }
  };

  return (
    <div className="p-4 space-y-4">
      <GlobalSettings
        meta={config.meta}
        features={config.features}
        updateGlobal={updateGlobal}
        onTableSelected={loadFieldsFromTable}
      />

      <StyleThemeSelector
        value={config.css.table_theme || 'dark'}
        onChange={(theme) => updateGlobal('css', { ...config.css, table_theme: theme })}
      />

      <JsonHistoryDropdown
        files={historyFiles}
        onSelect={handleLoadHistory}
        onApply={handleApplyHistory}
      />

      <FieldTableConfig fields={config.fields} updateField={updateField} />

      <RowActionSelector
        selected={config.features.row_actions}
        onChange={(actions) => updateFeature({ row_actions: actions })}
      />

      <BulkActionSelector
        selected={config.features.bulk_actions}
        onChange={(actions) => updateFeature({ bulk_actions: actions })}
      />

      <div className="space-y-2">
        <h2 className="font-bold">JSON 預覽</h2>
        <textarea
          className="w-full h-40 p-2 border rounded text-xs"
          readOnly
          value={JSON.stringify(config, null, 2)}
        ></textarea>

        {config.meta.table_name && (
          <div className="text-sm text-gray-600">
            📎 Shortcode: <code>[harvard_table_preview id="{config.meta.table_name}"]</code>
          </div>
        )}

        <div className="space-x-2">
          <button className="bg-green-600 text-white px-4 py-2 rounded" onClick={saveConfig}>
            💾 儲存配置
          </button>
          <button className="bg-blue-500 text-white px-4 py-2 rounded" onClick={downloadConfig}>
            ⬇ 下載 JSON
          </button>
          <button
            className="bg-gray-700 text-white px-4 py-2 rounded"
            onClick={() => {
              const tableName = config.meta.table_name || 'wp_ai_tasks';
              const url = `${window.location.origin}/wp-admin/admin-post.php?action=add_htb_demo_page&table=${tableName}`;
              window.open(url, '_blank');
            }}
          >
            📄 新增測試頁面
          </button>
        </div>
      </div>
    </div>
  );
}

export default App;


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src/components
檔名：BulkActionSelector.jsx
==================================================
import React from 'react';

const options = ['delete', 'copy', 'print'];

function BulkActionSelector({ selected = [], onChange }) {
  const toggle = (action) => {
    const updated = selected.includes(action)
      ? selected.filter((a) => a !== action)
      : [...selected, action];
    onChange(updated);
  };

  return (
    <div className="border p-2 rounded">
      <h2 className="font-bold mb-2">批量操作設定</h2>
      <div className="flex space-x-4">
        {options.map((action) => (
          <label key={action} className="flex items-center space-x-1">
            <input
              type="checkbox"
              checked={selected.includes(action)}
              onChange={() => toggle(action)}
            />
            <span>{action}</span>
          </label>
        ))}
      </div>
    </div>
  );
}

export default BulkActionSelector;


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src/components
檔名：FieldEditor.jsx
==================================================
/**
 * File: src/components/FieldEditor.jsx
 * Description: 字段编辑面板，允许用户修改单个字段的属性（如 label、type、widget、editable、required 等）。
 * Author: Your Name
 * Date: 2025-03-30
 */

import React from 'react';

function FieldEditor({ field, updateField }) {
  if (!field) {
    return <div>请选择一个字段进行编辑</div>;
  }

  /**
   * 处理输入控件的变化，更新当前字段属性
   */
  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    updateField({ [name]: type === 'checkbox' ? checked : value });
  };

  return (
    <div className="p-2 border rounded">
      <h2 className="font-bold mb-2">编辑字段：{field.label || field.key}</h2>
      {/* 字段标签输入（未来可扩展为多语言输入组件） */}
      <div className="mb-2">
        <label className="block text-sm">字段标签</label>
        <input
          type="text"
          name="label"
          value={field.label || ''}
          onChange={handleChange}
          className="w-full border p-1 rounded"
          placeholder="例如：标题（多语言建议使用对象存储）"
        />
      </div>
      {/* 字段类型选择 */}
      <div className="mb-2">
        <label className="block text-sm">字段类型</label>
        <select
          name="type"
          value={field.type || 'text'}
          onChange={handleChange}
          className="w-full border p-1 rounded"
        >
          <option value="text">Text</option>
          <option value="int">Integer</option>
          <option value="float">Float</option>
          <option value="datetime">Datetime</option>
          <option value="select">Select</option>
          <option value="bool">Boolean</option>
          <option value="json">JSON</option>
        </select>
      </div>
      {/* 控件类型选择 */}
      <div className="mb-2">
        <label className="block text-sm">控件类型（Widget）</label>
        <select
          name="widget"
          value={field.widget || 'input'}
          onChange={handleChange}
          className="w-full border p-1 rounded"
        >
          <option value="input">Input</option>
          <option value="textarea">Textarea</option>
          <option value="select">Select</option>
          <option value="switch">Switch</option>
          <option value="image">Image</option>
          <option value="code">Code</option>
          <option value="readonly">Readonly</option>
        </select>
      </div>
      {/* 可编辑开关 */}
      <div className="mb-2 flex items-center">
        <input
          type="checkbox"
          name="editable"
          checked={field.editable || false}
          onChange={handleChange}
          className="mr-2"
        />
        <label className="text-sm">可编辑</label>
      </div>
      {/* 必填开关 */}
      <div className="mb-2 flex items-center">
        <input
          type="checkbox"
          name="required"
          checked={field.required || false}
          onChange={handleChange}
          className="mr-2"
        />
        <label className="text-sm">必填</label>
      </div>
      {/* 此处可继续添加其他属性编辑，如 placeholder、hint、validation、visible_when、group 等 */}
      <p className="text-xs text-gray-500">更多属性请后续扩展…</p>
    </div>
  );
  // 在原本的 FieldEditor.jsx 中的 return 裡新增以下區塊

{/* 進階設定區塊（以 JSON 格式儲存到 field.format） */}
<div className="mt-4 border-t pt-4">
  <h3 className="font-bold mb-2">進階設定</h3>

  {/* 顯示名稱（Caption） */}
  <div className="mb-2">
    <label className="block text-sm">顯示文字（caption）</label>
    <input
      type="text"
      name="format.caption"
      value={field.format?.caption || ''}
      onChange={(e) =>
        updateField({
          format: {
            ...field.format,
            caption: e.target.value
          }
        })
      }
      className="w-full border p-1 rounded"
      placeholder="例如：下載連結 / 頭像圖片"
    />
  </div>

  {/* Href 超連結 */}
  <div className="mb-2">
    <label className="block text-sm">超連結（href）</label>
    <input
      type="text"
      name="format.href"
      value={field.format?.href || ''}
      onChange={(e) =>
        updateField({
          format: {
            ...field.format,
            href: e.target.value
          }
        })
      }
      className="w-full border p-1 rounded"
      placeholder="例如：{value} 或 https://site.com/file/{value}"
    />
  </div>

  {/* Tooltip */}
  <div className="mb-2">
    <label className="block text-sm">Tooltip（滑鼠提示）</label>
    <input
      type="text"
      name="format.tooltip"
      value={field.format?.tooltip || ''}
      onChange={(e) =>
        updateField({
          format: {
            ...field.format,
            tooltip: e.target.value
          }
        })
      }
      className="w-full border p-1 rounded"
      placeholder="例如：點我下載"
    />
  </div>

  {/* Image 設定 */}
  <div className="mb-2">
    <label className="block text-sm">圖片縮圖寬度（若為圖片）</label>
    <input
      type="number"
      name="format.image.thumb_width"
      value={field.format?.image?.thumb_width || ''}
      onChange={(e) =>
        updateField({
          format: {
            ...field.format,
            image: {
              ...field.format?.image,
              thumb_width: parseInt(e.target.value) || 0
            }
          }
        })
      }
      className="w-full border p-1 rounded"
      placeholder="例如：80"
    />
  </div>

  <div className="mb-2 flex items-center">
    <input
      type="checkbox"
      name="format.image.popup"
      checked={field.format?.image?.popup || false}
      onChange={(e) =>
        updateField({
          format: {
            ...field.format,
            image: {
              ...field.format?.image,
              popup: e.target.checked
            }
          }
        })
      }
      className="mr-2"
    />
    <label className="text-sm">圖片支援點擊放大（popup）</label>
  </div>
</div>

}

export default FieldEditor;


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src/components
檔名：FieldList.jsx
==================================================
/**
 * File: src/components/FieldList.jsx
 * Description: 字段列表组件，展示所有字段并支持拖拽排序。点击字段项后会触发编辑。
 * Author: Your Name
 * Date: 2025-03-30
 */

import React from 'react';
import { Draggable, Droppable } from 'react-beautiful-dnd';

function FieldList({ fields, setSelectedFieldKey }) {
  // 将 fields 对象转换为数组，并按 order 排序（若 order 未设置，则默认排序按 key）
  const fieldsArr = Object.entries(fields).sort((a, b) => (a[1].order || 0) - (b[1].order || 0));
  return (
    <Droppable droppableId="fields-list">
      {(provided) => (
        <div
          ref={provided.innerRef}
          {...provided.droppableProps}
          className="border p-2 rounded h-96 overflow-auto"
        >
          <h2 className="font-bold mb-2">字段列表</h2>
          {fieldsArr.map(([key, field], index) => (
            <Draggable key={key} draggableId={key} index={index}>
              {(provided) => (
                <div
                  className="p-2 border mb-2 rounded cursor-pointer hover:bg-gray-100"
                  ref={provided.innerRef}
                  {...provided.draggableProps}
                  {...provided.dragHandleProps}
                  onClick={() => setSelectedFieldKey(key)}
                >
                  <div className="font-semibold">{field.label || key}</div>
                  <div className="text-xs text-gray-500">{field.type || 'text'}</div>
                </div>
              )}
            </Draggable>
          ))}
          {provided.placeholder}
        </div>
      )}
    </Droppable>
  );
}

export default FieldList;


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src/components
檔名：FieldTableConfig.jsx
==================================================
import React from 'react';

function FieldTableConfig({ fields, updateField }) {
  if (!fields || Object.keys(fields).length === 0) {
    return <p>尚未定義任何欄位。</p>;
  }

  const handleFieldChange = (key, fieldPatch) => {
    updateField(key, {
      ...fields[key],
      ...fieldPatch,
    });
  };

  const handleFormatChange = (key, formatPatch) => {
    const field = fields[key];
    updateField(key, {
      ...field,
      format: {
        ...(field.format || {}),
        ...formatPatch,
      },
    });
  };

  const handleImageFormatChange = (key, imagePatch) => {
    const field = fields[key];
    updateField(key, {
      ...field,
      format: {
        ...(field.format || {}),
        image: {
          ...(field.format?.image || {}),
          ...imagePatch,
        },
      },
    });
  };

  return (
    <div className="field-config-table">
      <table className="widefat striped">
        <thead>
          <tr>
            <th>#</th>
            <th>欄位名稱</th>
            <th>顯示名稱</th>
            <th>顯示</th>
            <th>排序</th>
            <th>連結</th>
            <th>圖片</th>
          </tr>
        </thead>
        <tbody>
          {Object.entries(fields).map(([key, field], index) => {
            const format = field.format || {};
            const image = format.image || {};
            return (
              <React.Fragment key={key}>
                <tr>
                  <td>{index + 1}</td>
                  <td><code>{key}</code></td>
                  <td>
                    <input
                      type="text"
                      value={format.caption || field.label || ''}
                      onChange={(e) =>
                        handleFormatChange(key, { caption: e.target.value })
                      }
                      className="small-text"
                      placeholder="顯示名稱"
                    />
                  </td>
                  <td>
                    <input
                      type="checkbox"
                      checked={field.visible || false}
                      onChange={(e) =>
                        handleFieldChange(key, { visible: e.target.checked })
                      }
                    />
                  </td>
                  <td>
                    <input
                      type="checkbox"
                      checked={field.sortable || false}
                      onChange={(e) =>
                        handleFieldChange(key, { sortable: e.target.checked })
                      }
                    />
                  </td>
                  <td>
                    <input
                      type="checkbox"
                      checked={!!format.href}
                      onChange={(e) =>
                        handleFormatChange(key, {
                          href: e.target.checked
                            ? 'https://your-link.com/{value}'
                            : ''
                        })
                      }
                    />
                  </td>
                  <td>
                    <input
                      type="checkbox"
                      checked={!!image.src}
                      onChange={(e) =>
                        handleImageFormatChange(key, {
                          src: e.target.checked
                            ? 'https://cdn.site.com/thumbs/{value}'
                            : ''
                        })
                      }
                    />
                  </td>
                </tr>

                {/* 連結設定區塊 */}
                {!!format.href && (
                  <tr>
                    <td colSpan="7">
                      🔗 <strong>連結設定：</strong>
                      <div style={{ display: 'flex', gap: '1rem', marginTop: '5px' }}>
                        <input
                          type="text"
                          className="regular-text"
                          value={format.href}
                          placeholder="href 模板，例如 https://.../{value}"
                          onChange={(e) =>
                            handleFormatChange(key, { href: e.target.value })
                          }
                        />
                        <select
                          value={format.target || ''}
                          onChange={(e) =>
                            handleFormatChange(key, { target: e.target.value })
                          }
                        >
                          <option value="">（不設定）</option>
                          <option value="_blank">_blank</option>
                          <option value="_self">_self</option>
                          <option value="_parent">_parent</option>
                        </select>
                        <input
                          type="text"
                          className="small-text"
                          placeholder="rel，例如 noopener"
                          value={format.rel || ''}
                          onChange={(e) =>
                            handleFormatChange(key, { rel: e.target.value })
                          }
                        />
                      </div>
                    </td>
                  </tr>
                )}

                {/* 圖片設定區塊 */}
                {!!image.src && (
                  <tr>
                    <td colSpan="7">
                      🖼 <strong>圖片設定：</strong>
                      <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem', marginTop: '5px' }}>
                        <input
                          type="text"
                          className="regular-text"
                          placeholder="圖片縮圖模板（src）"
                          value={image.src}
                          onChange={(e) =>
                            handleImageFormatChange(key, { src: e.target.value })
                          }
                        />
                        <input
                          type="text"
                          className="regular-text"
                          placeholder="點擊放大圖 URL（popup_url）"
                          value={image.popup_url || ''}
                          onChange={(e) =>
                            handleImageFormatChange(key, { popup_url: e.target.value })
                          }
                        />
                      </div>
                    </td>
                  </tr>
                )}
              </React.Fragment>
            );
          })}
        </tbody>
      </table>
    </div>
  );
}

export default FieldTableConfig;


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src/components
檔名：GlobalSettings.jsx
==================================================
/**
 * File: src/components/GlobalSettings.jsx
 * Description: 全局设置面板，用于编辑 meta 与 features 信息（如配置 ID、标题、数据表名、描述等）。
 * Author: Your Name
 * Date: 2025-03-30
 */

import React, { useEffect, useState } from 'react';

function GlobalSettings({ meta, features, updateGlobal, onTableSelected }) {
  const [tables, setTables] = useState([]);

  // 取得資料表列表
  useEffect(() => {
    fetch(`${window.HTB_CONFIG.rest_url}/tables`, {
      headers: { 'X-WP-Nonce': window.HTB_CONFIG.nonce }
    })
      .then(res => res.json())
      .then(setTables)
      .catch(err => console.error('載入資料表失敗', err));
  }, []);

  const handleMetaChange = (e) => {
    const { name, value } = e.target;
    updateGlobal('meta', { [name]: value });
  };

  const handleTableSelect = (e) => {
    const table = e.target.value;
    updateGlobal('meta', { table_name: table });
    if (onTableSelected) onTableSelected(table);
  };

  return (
    <div className="mb-4 p-2 border rounded">
      <h2 className="font-bold mb-2">全局設定</h2>

      <div className="mb-2">
        <label className="block text-sm">資料表選擇</label>
        <select
          className="w-full border p-1 rounded"
          value={meta.table_name}
          onChange={handleTableSelect}
        >
          <option value="">-- 選擇資料表 --</option>
          {tables.map((table) => (
            <option key={table} value={table}>
              {table}
            </option>
          ))}
        </select>
      </div>

      <div className="mb-2">
        <label className="block text-sm">配置 ID</label>
        <input
          type="text"
          name="id"
          value={meta.id}
          onChange={handleMetaChange}
          className="w-full border p-1 rounded"
          placeholder="請輸入唯一 ID"
        />
      </div>

      <div className="mb-2">
        <label className="block text-sm">標題</label>
        <input
          type="text"
          name="title"
          value={meta.title}
          onChange={handleMetaChange}
          className="w-full border p-1 rounded"
        />
      </div>

      <div className="mb-2">
        <label className="block text-sm">描述</label>
        <textarea
          name="description"
          value={meta.description}
          onChange={handleMetaChange}
          className="w-full border p-1 rounded"
        ></textarea>
      </div>
    </div>
  );
}

export default GlobalSettings;


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src/components
檔名：JsonHistoryDropdown.jsx
==================================================
import React from 'react';

function JsonHistoryDropdown({ files = [], onSelect, onApply }) {
  return (
    <div className="mb-4">
      <label className="block text-sm font-bold mb-1">📦 歷史配置檔</label>
      <ul className="border rounded divide-y max-h-40 overflow-auto text-sm">
        {files.map((file) => (
          <li key={file} className="p-2 flex items-center justify-between">
            <span className="truncate">{file}</span>
            <div className="space-x-2">
              <button
                className="text-blue-600 hover:underline text-xs"
                onClick={() => onSelect(file)}
              >
                載入
              </button>
              <button
                className="text-green-600 hover:underline text-xs"
                onClick={() => onApply(file)}
              >
                套用
              </button>
            </div>
          </li>
        ))}
        {files.length === 0 && <li className="p-2 text-gray-500">尚無歷史檔案</li>}
      </ul>
    </div>
  );
}

export default JsonHistoryDropdown;


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src/components
檔名：Preview.jsx
==================================================
/**
 * File: src/components/Preview.jsx
 * Description: 简易的 CRUD 预览组件，用于展示当前配置下的表格标题、数据表名及字段列表。
 * Author: Your Name
 * Date: 2025-03-30
 */

import React from 'react';

function Preview({ config }) {
  return (
    <div className="border p-2 rounded">
      <h2 className="font-bold mb-2">预览效果</h2>
      <div className="mb-2">
        <strong>标题:</strong> {config.meta.title || '未设置'}
      </div>
      <div className="mb-2">
        <strong>数据表:</strong> {config.meta.table_name || '未设置'}
      </div>
      <div className="mb-2">
        <strong>字段列表:</strong>
        <ul className="list-disc ml-5">
          {Object.entries(config.fields)
            .sort((a, b) => (a[1].order || 0) - (b[1].order || 0))
            .map(([key, field]) => (
              <li key={key}>
                {field.label || key} ({field.type || 'text'})
              </li>
          ))}
        </ul>
      </div>
      <p className="text-xs text-gray-500">实际 CRUD 预览可集成更复杂的表格和编辑表单组件</p>
    </div>
  );
}

export default Preview;


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src/components
檔名：RowActionSelector.jsx
==================================================
import React from 'react';

const options = ['view', 'edit', 'delete', 'copy'];

function RowActionSelector({ selected = [], onChange }) {
  const toggle = (action) => {
    const updated = selected.includes(action)
      ? selected.filter((a) => a !== action)
      : [...selected, action];
    onChange(updated);
  };

  return (
    <div className="border p-2 rounded">
      <h2 className="font-bold mb-2">列操作設定</h2>
      <div className="flex space-x-4">
        {options.map((action) => (
          <label key={action} className="flex items-center space-x-1">
            <input
              type="checkbox"
              checked={selected.includes(action)}
              onChange={() => toggle(action)}
            />
            <span>{action}</span>
          </label>
        ))}
      </div>
    </div>
  );
}

export default RowActionSelector;


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src/components
檔名：StyleThemeSelector.jsx
==================================================
import React from 'react';

const themes = {
  light: '灰白風格（預設）',
  blue: '藍灰科技風',
  green: '綠色清新風',
  dark: '深色專業風',
};

export default function StyleThemeSelector({ value, onChange }) {
  return (
    <div className="mb-4">
      <label className="block font-bold mb-1">表格風格主題</label>
      <select
        className="border px-2 py-1 rounded w-full"
        value={value}
        onChange={(e) => onChange(e.target.value)}
      >
        {Object.entries(themes).map(([key, label]) => (
          <option key={key} value={key}>{label}</option>
        ))}
      </select>
    </div>
  );
}


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/includes
檔名：db-actions.php
==================================================
<?php
/**
 * HarvardTable - 資料庫操作模組（db-actions.php）
 * 用於集中處理所有與資料表的 CRUD 動作，供 REST API 調用。
 */

if (!defined('ABSPATH')) exit; // 防止直接存取

/**
 * 🔍 取得資料列（支援分頁）
 *
 * @param string $table 資料表名稱
 * @param int $limit 筆數
 * @param int $offset 起始筆數
 * @return array 結果資料列（關聯陣列）
 */
function htb_get_rows($table, $limit = 20, $offset = 0) {
  global $wpdb;
  $sql = $wpdb->prepare("SELECT * FROM `$table` LIMIT %d OFFSET %d", $limit, $offset);
  return $wpdb->get_results($sql, ARRAY_A);
}

/**
 * 🔍 取得單筆資料（by ID）
 *
 * @param string $table
 * @param int $id
 * @return array|null
 */
function htb_get_row_by_id($table, $id) {
  global $wpdb;
  $sql = $wpdb->prepare("SELECT * FROM `$table` WHERE id = %d LIMIT 1", intval($id));
  return $wpdb->get_row($sql, ARRAY_A);
}

/**
 * ➕ 建立一筆新資料
 *
 * @param string $table
 * @param array $data 鍵值對欄位資料
 * @return int|false 新資料的 ID 或失敗
 */
function htb_create_row($table, $data) {
  global $wpdb;
  $result = $wpdb->insert($table, $data);
  return $result ? $wpdb->insert_id : false;
}

/**
 * ✏️ 更新單筆資料
 *
 * @param string $table
 * @param int $id
 * @param array $data 欲更新的欄位
 * @return bool 是否成功
 */
function htb_update_row($table, $id, $data) {
  global $wpdb;
  return (bool) $wpdb->update($table, $data, ['id' => intval($id)]);
}

/**
 * 🗑 批次刪除資料（多筆）
 *
 * @param string $table
 * @param array $ids 欲刪除的 id 陣列
 * @return int|false 實際刪除筆數或 false
 */
function htb_delete_rows($table, $ids) {
  global $wpdb;
  if (empty($ids)) return false;
  $placeholders = implode(',', array_fill(0, count($ids), '%d'));
  $sql = "DELETE FROM `$table` WHERE id IN ($placeholders)";
  return $wpdb->query($wpdb->prepare($sql, array_map('intval', $ids)));
}


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table
檔名：harvard-table.php
==================================================
<?php
/**
 * Plugin Name: Harvard Table Builder
 * Description: Harvard Table 字段配置器工具，提供可视化拖拽、实时 JSON 预览、内嵌 CRUD 预览、多语言字段支持及配置文件保存/加载功能。
 * Version: 1.0.0
 * Author: Your Name
 * License: GPL2
 * Text Domain: harvard-table-builder
 *
 * 此插件作为现有 Harvard Table 插件的子模块，在后台提供一个配置页面（slug：harvard-table-builder）。
 * 包含前端 React 应用和后端 REST API，用于生成标准 5 段结构的字段配置 JSON。
 */

if ( ! defined( 'ABSPATH' ) ) {
    exit; // 防止直接访问
}

// 定义插件目录与版本常量
define( 'HTB_VERSION', '1.0.0' );
define( 'HTB_PLUGIN_DIR', plugin_dir_path( __FILE__ ) );
define( 'HTB_PLUGIN_URL', plugin_dir_url( __FILE__ ) );

// 加载 REST API 接口模块
require_once HTB_PLUGIN_DIR . 'includes/rest-endpoints.php';

// 加载后台菜单模块（会引入页面展示代码）
require_once HTB_PLUGIN_DIR . 'admin/menu.php';

/**
 * 在后台管理页面加载 React 生产包。
 * 只有在当前页面为 harvard-table-builder 页面时才加载。
 */
add_action( 'admin_enqueue_scripts', function( $hook ) {
    if ( strpos( $hook, 'harvard-table-builder' ) === false ) {
        return;
    }

    // 确保加载 WordPress 的 React 依赖
    wp_enqueue_script( 'wp-element' );

    wp_enqueue_script(
        'htb-react-app',
        HTB_PLUGIN_URL . 'assets/build/index.js',
        array( 'wp-element' ), // WordPress 提供的 React
        HTB_VERSION,
        true
    );
    wp_enqueue_style(
        'htb-react-app',
        HTB_PLUGIN_URL . 'assets/build/style.css',
        array(),
        HTB_VERSION
    );

    wp_localize_script( 'htb-react-app', 'HTB_CONFIG', array(
        'nonce'       => wp_create_nonce( 'wp_rest' ),
        'rest_url'    => rest_url( 'harvardtable/v1' ),
        'configs_url' => HTB_PLUGIN_URL . 'configs/',
        'containerId' => 'htb-root' // 显式注入 containerId
    ) );
} );


// 確保 configs 資料夾存在
register_activation_hook( __FILE__, function () {
    $config_dir = HTB_PLUGIN_DIR . 'configs/';
    if ( ! file_exists( $config_dir ) ) {
        mkdir( $config_dir, 0755, true );
    }
} );
add_action('admin_post_add_htb_demo_page', function () {
    if (!current_user_can('manage_options')) {
        wp_die('Permission denied');
    }

    $slug = 'htb-preview-test';
    $table = isset($_GET['table']) ? sanitize_key($_GET['table']) : 'wp_ai_tasks';

    // 預設內容
    $shortcode = '[harvard_table_preview id="' . esc_attr($table) . '"]';

    // 檢查是否已有同樣 slug 頁面
    $existing = get_page_by_path($slug);
    if ($existing) {
        // 更新頁面內容中的 shortcode（這段可選）
        wp_update_post([
            'ID' => $existing->ID,
            'post_content' => $shortcode,
        ]);

        wp_redirect(admin_url("post.php?post={$existing->ID}&action=edit"));
        exit;
    }

    // 建立新頁面
    $post_id = wp_insert_post([
        'post_title'   => 'HTB A',
        'post_name'    => $slug,
        'post_status'  => 'publish',
        'post_type'    => 'page',
        'post_content' => $shortcode,
    ]);

    wp_redirect(admin_url("post.php?post={$post_id}&action=edit"));
    exit;
});
add_shortcode('harvard_table_preview', function ($atts) {
    global $wpdb;

    // 取得配置 ID
    $atts = shortcode_atts(['id' => ''], $atts);
    $id = sanitize_file_name($atts['id']);
    $file = HTB_PLUGIN_DIR . "configs/{$id}.json";

    if (!file_exists($file)) {
        return '<p><strong>❌ 無法載入配置檔：' . esc_html($id) . '.json</strong></p>';
    }

    $config = json_decode(file_get_contents($file), true);
    if (!is_array($config)) {
        return '<p><strong>❌ 配置檔 JSON 格式錯誤。</strong></p>';
    }

    $meta     = $config['meta'] ?? [];
    $features = $config['features'] ?? [];
    $fields   = $config['fields'] ?? [];
    $logic    = $config['logic'] ?? [];
    $css      = $config['css'] ?? [];

    $tableName = sanitize_key($meta['table_name'] ?? '');
    if (empty($tableName)) {
        return '<p><strong>❌ 未設定資料表名稱。</strong></p>';
    }

    // 準備欄位與順序
    $visible_fields = array_filter($fields, fn($f) => !empty($f['visible']));
    uasort($visible_fields, fn($a, $b) => ($a['order'] ?? 0) <=> ($b['order'] ?? 0));
    $columns = array_keys($visible_fields);

    if (empty($columns)) {
        return '<p><strong>⚠️ 沒有任何欄位被設定為可見。</strong></p>';
    }

    // 查詢實際資料（最多取 100 筆）
    $cols_escaped = implode(',', array_map(fn($c) => "`$c`", $columns));
    $data = $wpdb->get_results("SELECT {$cols_escaped} FROM `{$tableName}` LIMIT 100", ARRAY_A);

    // 建立表格樣式
    $theme = sanitize_html_class($css['table_theme'] ?? 'light');

    ob_start();
    echo '<div class="harvard-table-preview">';
    echo '<h3>' . esc_html($meta['title'] ?? $tableName) . '</h3>';

   // echo '<table class="htb-live-table widefat striped htb-theme-' . esc_attr($theme) . '">';
    echo '<table class="htb-live-table widefat striped htb-theme-blue">';
    // ─── 加入 <thead> 表頭區 ───
    echo '<thead><tr>';
    
    // ✅ 若啟用 bulk_actions，加入最左側全選 checkbox
    if (!empty($features['bulk_actions'])) {
        echo '<th><input type="checkbox" id="htb-select-all" /></th>';
    }
    
    // 原本的欄位標題
    foreach ($visible_fields as $key => $field) {
        echo '<th>' . esc_html($field['label'] ?? $key) . '</th>';
    }
    
    // 操作欄
    if (!empty($features['row_actions'])) {
        echo '<th>操作</th>';
    }
    
    echo '</tr></thead>';

    echo '</tr></thead><tbody>';
    foreach ($data as $row) {
        echo '<tr data-id="' . esc_attr($row['id']) . '">';
    
        // ✅ 如果有啟用批次操作，加上這個欄
        if (!empty($features['bulk_actions'])) {
            echo '<td><input type="checkbox" class="htb-row-checkbox" value="' . esc_attr($row['id']) . '" /></td>';
        }
    
        // 顯示每欄資料
        foreach ($columns as $key) {
            $value = $row[$key];
            $field = $visible_fields[$key] ?? [];
            echo '<td>' . render_field_value($field, $value) . '</td>';
        }
    

        // 列操作
        if (!empty($features['row_actions'])) {
            echo '<td>';
            foreach ($features['row_actions'] as $action) {
                echo '<button class="htb-btn htb-action-' . esc_attr($action) . '" data-id="' . esc_attr($row['id']) . '">' . esc_html($action) . '</button> ';
            }
            echo '</td>';
        }

        echo '</tr>';
    }
    // 批次操作工具列
    if (!empty($features['bulk_actions'])) {
        echo '<div class="htb-bulk-toolbar">';
        foreach ($features['bulk_actions'] as $action) {
            echo '<button class="htb-bulk-btn" data-action="' . esc_attr($action) . '">' . esc_html($action) . '</button> ';
        }
        echo '</div>';
    }
    echo '</tbody></table>';

echo '<script>
window.HTB_CONFIG = {
  nonce: "' . esc_js(wp_create_nonce('wp_rest')) . '",
  rest_url: "' . esc_url(rest_url('htb/v1')) . '",
  table_name: "' . esc_js($config['meta']['table_name']) . '"
};
</script>';
    echo '</div>';

    // JavaScript 初始化 DataTables
    $default_sort = $features['default_sort'] ?? [];
    $sortIndex = array_search($default_sort['field'] ?? '', $columns);
    $sortDir = $default_sort['direction'] ?? 'asc';
    $orderClause = ($sortIndex !== false) ? [[$sortIndex, $sortDir]] : [];

    $pageLength = intval($features['page_length'] ?? 10);
    $dtInit = [
        'searching'   => !empty($features['search']),
        'paging'      => !empty($features['pagination']),
        'ordering'    => !empty($features['sortable']),
        'pageLength'  => $pageLength,
    ];
    if (!empty($orderClause)) {
        $dtInit['order'] = $orderClause;
    }

    // 載入 DataTables JS/CSS
    wp_enqueue_style('datatables', 'https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css', [], null);
    //wp_enqueue_style('datatables', 'https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css', [], null);

    wp_enqueue_script('datatables', 'https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js', ['jquery'], null, true);
    wp_add_inline_script('datatables', '
    jQuery(function($) {
        $(".htb-live-table").DataTable(' . json_encode($dtInit) . ');
    });
    ');

    return ob_get_clean();
});

add_action('wp_enqueue_scripts', function () {
    // ✅ htb-preview-style（編譯產物）
    $preview_style = plugin_dir_path(__FILE__) . 'assets/build/style.css';
    if (file_exists($preview_style)) {
        wp_enqueue_style(
            'htb-preview-style',
            plugins_url('assets/build/style.css', __FILE__),
            [],
            filemtime($preview_style) // 防止快取
        );
    }

    // ✅ harvard-table-style（自訂樣式，建議永遠載入）
    $base_style = plugin_dir_path(__FILE__) . 'assets/css/style.css';
    if (file_exists($base_style)) {
        wp_enqueue_style(
            'harvard-table-style',
            plugins_url('assets/css/style.css', __FILE__),
            [],
            filemtime($base_style)
        );
    }

    // ✅ scripts.js（JS 控制器）
    wp_enqueue_script(
        'htb-scripts',
        plugins_url('assets/js/scripts.js', __FILE__),
        ['jquery'],
        filemtime(plugin_dir_path(__FILE__) . 'assets/js/scripts.js'),
        true
    );
});
function render_field_value($field, $value) {
    if ($value === null || $value === '') return '';

    $format = $field['format'] ?? [];
    $tooltip = !empty($format['tooltip']) ? ' title="' . esc_attr($format['tooltip']) . '"' : '';

    // 圖片處理邏輯
    if (($field['type'] ?? '') === 'image' || !empty($format['image'])) {
        $img_format = $format['image'] ?? [];

        $img_src = $img_format['src'] ?? $value;
        $img_src = str_replace('{value}', $value, $img_src);

        $popup_url = $img_format['popup_url'] ?? $img_src;
        $popup_url = str_replace('{value}', $value, $popup_url);

        $thumb_width = intval($img_format['thumb_width'] ?? 80);
        $alt = esc_attr($img_format['alt'] ?? 'Image');

        // ✅ fallback 預設圖 URL
        $fallback_src = '/wp-content/plugins/your-plugin/assets/img/default-thumb.png';

        $img_tag = '<img 
            src="' . esc_url($img_src) . '" 
            width="' . $thumb_width . '" 
            alt="' . $alt . '" 
            onerror="this.onerror=null;this.src=\'' . esc_url($fallback_src) . '\'; this.title=\'尚未就緒或找不到圖片\';"
            ' . $tooltip . '
        />';

        if (!empty($img_format['popup_url'])) {
            return '<a href="' . esc_url($popup_url) . '" target="_blank">' . $img_tag . '</a>';
        }

        return $img_tag;
    }

    // 超連結處理
    if (!empty($format['href'])) {
        $href = str_replace('{value}', $value, $format['href']);
        $target = isset($format['target']) ? esc_attr($format['target']) : '_blank';
        $rel = !empty($format['rel']) ? ' rel="' . esc_attr($format['rel']) . '"' : '';
        return '<a href="' . esc_url($href) . '" target="' . $target . '"' . $rel . $tooltip . '>' . esc_html($value) . '</a>';
    }

    // 預設純文字輸出
    return '<span' . $tooltip . '>' . esc_html($value) . '</span>';
}





目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src
檔名：index.css
==================================================
/**
 * File: src/index.css
 * Description: TailwindCSS 样式入口文件。
 * Author: Your Name
 * Date: 2025-03-30
 */
@tailwind base;
@tailwind components;
@tailwind utilities;


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/assets/build
檔名：index.js
==================================================
(function(p,k){var S;"use strict";var N={exports:{}},f={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var F=p,$=Symbol.for("react.element"),I=Symbol.for("react.fragment"),H=Object.prototype.hasOwnProperty,B=F.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,G={key:!0,ref:!0,__self:!0,__source:!0};function v(t,l,d){var s,u={},n=null,c=null;d!==void 0&&(n=""+d),l.key!==void 0&&(n=""+l.key),l.ref!==void 0&&(c=l.ref);for(s in l)H.call(l,s)&&!G.hasOwnProperty(s)&&(u[s]=l[s]);if(t&&t.defaultProps)for(s in l=t.defaultProps,l)u[s]===void 0&&(u[s]=l[s]);return{$$typeof:$,type:t,key:n,ref:c,props:u,_owner:B.current}}f.Fragment=I,f.jsx=v,f.jsxs=v,N.exports=f;var e=N.exports,y,C=k;y=C.createRoot,C.hydrateRoot;function P({meta:t,features:l,updateGlobal:d,onTableSelected:s}){const[u,n]=p.useState([]);p.useEffect(()=>{fetch(`${window.HTB_CONFIG.rest_url}/tables`,{headers:{"X-WP-Nonce":window.HTB_CONFIG.nonce}}).then(r=>r.json()).then(n).catch(r=>console.error("載入資料表失敗",r))},[]);const c=r=>{const{name:m,value:o}=r.target;d("meta",{[m]:o})},x=r=>{const m=r.target.value;d("meta",{table_name:m}),s&&s(m)};return e.jsxs("div",{className:"mb-4 p-2 border rounded",children:[e.jsx("h2",{className:"font-bold mb-2",children:"全局設定"}),e.jsxs("div",{className:"mb-2",children:[e.jsx("label",{className:"block text-sm",children:"資料表選擇"}),e.jsxs("select",{className:"w-full border p-1 rounded",value:t.table_name,onChange:x,children:[e.jsx("option",{value:"",children:"-- 選擇資料表 --"}),u.map(r=>e.jsx("option",{value:r,children:r},r))]})]}),e.jsxs("div",{className:"mb-2",children:[e.jsx("label",{className:"block text-sm",children:"配置 ID"}),e.jsx("input",{type:"text",name:"id",value:t.id,onChange:c,className:"w-full border p-1 rounded",placeholder:"請輸入唯一 ID"})]}),e.jsxs("div",{className:"mb-2",children:[e.jsx("label",{className:"block text-sm",children:"標題"}),e.jsx("input",{type:"text",name:"title",value:t.title,onChange:c,className:"w-full border p-1 rounded"})]}),e.jsxs("div",{className:"mb-2",children:[e.jsx("label",{className:"block text-sm",children:"描述"}),e.jsx("textarea",{name:"description",value:t.description,onChange:c,className:"w-full border p-1 rounded"})]})]})}function D({fields:t,updateField:l}){if(!t||Object.keys(t).length===0)return e.jsx("p",{children:"尚未定義任何欄位。"});const d=(n,c)=>{l(n,{...t[n],...c})},s=(n,c)=>{const x=t[n];l(n,{...x,format:{...x.format||{},...c}})},u=(n,c)=>{var r;const x=t[n];l(n,{...x,format:{...x.format||{},image:{...((r=x.format)==null?void 0:r.image)||{},...c}}})};return e.jsx("div",{className:"field-config-table",children:e.jsxs("table",{className:"widefat striped",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"#"}),e.jsx("th",{children:"欄位名稱"}),e.jsx("th",{children:"顯示名稱"}),e.jsx("th",{children:"顯示"}),e.jsx("th",{children:"排序"}),e.jsx("th",{children:"連結"}),e.jsx("th",{children:"圖片"})]})}),e.jsx("tbody",{children:Object.entries(t).map(([n,c],x)=>{const r=c.format||{},m=r.image||{};return e.jsxs(p.Fragment,{children:[e.jsxs("tr",{children:[e.jsx("td",{children:x+1}),e.jsx("td",{children:e.jsx("code",{children:n})}),e.jsx("td",{children:e.jsx("input",{type:"text",value:r.caption||c.label||"",onChange:o=>s(n,{caption:o.target.value}),className:"small-text",placeholder:"顯示名稱"})}),e.jsx("td",{children:e.jsx("input",{type:"checkbox",checked:c.visible||!1,onChange:o=>d(n,{visible:o.target.checked})})}),e.jsx("td",{children:e.jsx("input",{type:"checkbox",checked:c.sortable||!1,onChange:o=>d(n,{sortable:o.target.checked})})}),e.jsx("td",{children:e.jsx("input",{type:"checkbox",checked:!!r.href,onChange:o=>s(n,{href:o.target.checked?"https://your-link.com/{value}":""})})}),e.jsx("td",{children:e.jsx("input",{type:"checkbox",checked:!!m.src,onChange:o=>u(n,{src:o.target.checked?"https://cdn.site.com/thumbs/{value}":""})})})]}),!!r.href&&e.jsx("tr",{children:e.jsxs("td",{colSpan:"7",children:["🔗 ",e.jsx("strong",{children:"連結設定："}),e.jsxs("div",{style:{display:"flex",gap:"1rem",marginTop:"5px"},children:[e.jsx("input",{type:"text",className:"regular-text",value:r.href,placeholder:"href 模板，例如 https://.../{value}",onChange:o=>s(n,{href:o.target.value})}),e.jsxs("select",{value:r.target||"",onChange:o=>s(n,{target:o.target.value}),children:[e.jsx("option",{value:"",children:"（不設定）"}),e.jsx("option",{value:"_blank",children:"_blank"}),e.jsx("option",{value:"_self",children:"_self"}),e.jsx("option",{value:"_parent",children:"_parent"})]}),e.jsx("input",{type:"text",className:"small-text",placeholder:"rel，例如 noopener",value:r.rel||"",onChange:o=>s(n,{rel:o.target.value})})]})]})}),!!m.src&&e.jsx("tr",{children:e.jsxs("td",{colSpan:"7",children:["🖼 ",e.jsx("strong",{children:"圖片設定："}),e.jsxs("div",{style:{display:"flex",flexDirection:"column",gap:"0.5rem",marginTop:"5px"},children:[e.jsx("input",{type:"text",className:"regular-text",placeholder:"圖片縮圖模板（src）",value:m.src,onChange:o=>u(n,{src:o.target.value})}),e.jsx("input",{type:"text",className:"regular-text",placeholder:"點擊放大圖 URL（popup_url）",value:m.popup_url||"",onChange:o=>u(n,{popup_url:o.target.value})})]})]})})]},n)})})]})})}const E=["view","edit","delete","copy"];function R({selected:t=[],onChange:l}){const d=s=>{const u=t.includes(s)?t.filter(n=>n!==s):[...t,s];l(u)};return e.jsxs("div",{className:"border p-2 rounded",children:[e.jsx("h2",{className:"font-bold mb-2",children:"列操作設定"}),e.jsx("div",{className:"flex space-x-4",children:E.map(s=>e.jsxs("label",{className:"flex items-center space-x-1",children:[e.jsx("input",{type:"checkbox",checked:t.includes(s),onChange:()=>d(s)}),e.jsx("span",{children:s})]},s))})]})}const J=["delete","copy","print"];function W({selected:t=[],onChange:l}){const d=s=>{const u=t.includes(s)?t.filter(n=>n!==s):[...t,s];l(u)};return e.jsxs("div",{className:"border p-2 rounded",children:[e.jsx("h2",{className:"font-bold mb-2",children:"批量操作設定"}),e.jsx("div",{className:"flex space-x-4",children:J.map(s=>e.jsxs("label",{className:"flex items-center space-x-1",children:[e.jsx("input",{type:"checkbox",checked:t.includes(s),onChange:()=>d(s)}),e.jsx("span",{children:s})]},s))})]})}function X({files:t=[],onSelect:l,onApply:d}){return e.jsxs("div",{className:"mb-4",children:[e.jsx("label",{className:"block text-sm font-bold mb-1",children:"📦 歷史配置檔"}),e.jsxs("ul",{className:"border rounded divide-y max-h-40 overflow-auto text-sm",children:[t.map(s=>e.jsxs("li",{className:"p-2 flex items-center justify-between",children:[e.jsx("span",{className:"truncate",children:s}),e.jsxs("div",{className:"space-x-2",children:[e.jsx("button",{className:"text-blue-600 hover:underline text-xs",onClick:()=>l(s),children:"載入"}),e.jsx("button",{className:"text-green-600 hover:underline text-xs",onClick:()=>d(s),children:"套用"})]})]},s)),t.length===0&&e.jsx("li",{className:"p-2 text-gray-500",children:"尚無歷史檔案"})]})]})}const A={light:"灰白風格（預設）",blue:"藍灰科技風",green:"綠色清新風",dark:"深色專業風"};function L({value:t,onChange:l}){return e.jsxs("div",{className:"mb-4",children:[e.jsx("label",{className:"block font-bold mb-1",children:"表格風格主題"}),e.jsx("select",{className:"border px-2 py-1 rounded w-full",value:t,onChange:d=>l(d.target.value),children:Object.entries(A).map(([d,s])=>e.jsx("option",{value:d,children:s},d))})]})}function M(){const[t,l]=p.useState({meta:{id:"",title:"",table_name:"",shortcode:"",created_at:"",description:""},features:{search:!0,pagination:!0,sortable:!0,bulk_select:!1,bulk_actions:[],row_actions:[],default_sort:{field:"",direction:"asc"}},fields:{},logic:{},css:{table_theme:"dart"}}),[d,s]=p.useState(null),[u,n]=p.useState([]),c=(a,i)=>{l(h=>({...h,[a]:{...h[a],...i}}))},x=(a,i)=>{l(h=>({...h,fields:{...h.fields,[a]:{...h.fields[a],...i}}}))},r=a=>{l(i=>({...i,features:{...i.features,...a}}))},m=async a=>{if(!a)return;const i=new Date,h=`${a}_${i.getFullYear()}${String(i.getMonth()+1).padStart(2,"0")}${String(i.getDate()).padStart(2,"0")}_${String(i.getHours()).padStart(2,"0")}${String(i.getMinutes()).padStart(2,"0")}`;c("meta",{id:h,title:h,description:h,table_name:a});const g=await(await fetch(`${window.HTB_CONFIG.rest_url}/table-columns?table=${a}`,{headers:{"X-WP-Nonce":window.HTB_CONFIG.nonce}})).json(),j={};g.forEach((_,Q)=>{const w=_.Field;j[w]={key:w,label:w,type:"text",visible:!0,sortable:!1,order:Q+1}}),l(_=>({..._,fields:j}));const z=await(await fetch(`${window.HTB_CONFIG.rest_url}/list-configs?table=${a}`,{headers:{"X-WP-Nonce":window.HTB_CONFIG.nonce}})).json();n(z)},o=async()=>{if(!t.meta.table_name){alert("請填寫資料表名稱");return}const a=t.meta.table_name,i=new Date().toISOString().replace(/[-T:]/g,"").slice(0,12),h=`${a}_${i}`,b={...t,meta:{...t.meta,id:h,title:h,description:h}};try{const j=await(await fetch(`${window.HTB_CONFIG.rest_url}/save-config`,{method:"POST",headers:{"Content-Type":"application/json","X-WP-Nonce":window.HTB_CONFIG.nonce},body:JSON.stringify(b)})).json(),T=await fetch(`${window.HTB_CONFIG.rest_url}/save-config`,{method:"POST",headers:{"Content-Type":"application/json","X-WP-Nonce":window.HTB_CONFIG.nonce},body:JSON.stringify({...b,meta:{...t.meta,id:a}})});j.success&&T.ok?alert(`✅ 已儲存版本：${j.filename} 及 ${a}.json`):alert(`❌ 儲存失敗：${j.message||"未知錯誤"}`)}catch(g){alert("儲存時發生錯誤："+g.message)}},Y=async()=>{if(!t.meta.id||!t.meta.table_name){alert("請先輸入配置 ID 和資料表名");return}try{const i=await(await fetch(`${window.HTB_CONFIG.rest_url}/save-config`,{method:"POST",headers:{"Content-Type":"application/json","X-WP-Nonce":window.HTB_CONFIG.nonce},body:JSON.stringify(t)})).json();if(i.success){const h=i.filename.replace(/\.json$/,""),b=`${window.HTB_CONFIG.rest_url}/download?id=${h}`;window.open(b,"_blank")}else alert(`❌ 下載失敗：${i.message||"未知錯誤"}`)}catch(a){alert("下載錯誤："+a.message)}},q=a=>{l(a),s(null)},K=async a=>{if(!window.confirm(`確認要套用 ${a}？此操作將覆蓋主檔。`))return;const h=await(await fetch(`${window.HTB_CONFIG.rest_url}/apply-history`,{method:"POST",headers:{"Content-Type":"application/json","X-WP-Nonce":window.HTB_CONFIG.nonce},body:JSON.stringify({filename:a})})).json();h.success?alert("✅ 已套用歷史版本，請重新載入頁面查看最新狀態"):alert("❌ 套用失敗："+(h.message||"未知錯誤"))};return e.jsxs("div",{className:"p-4 space-y-4",children:[e.jsx(P,{meta:t.meta,features:t.features,updateGlobal:c,onTableSelected:m}),e.jsx(L,{value:t.css.table_theme||"dark",onChange:a=>c("css",{...t.css,table_theme:a})}),e.jsx(X,{files:u,onSelect:q,onApply:K}),e.jsx(D,{fields:t.fields,updateField:x}),e.jsx(R,{selected:t.features.row_actions,onChange:a=>r({row_actions:a})}),e.jsx(W,{selected:t.features.bulk_actions,onChange:a=>r({bulk_actions:a})}),e.jsxs("div",{className:"space-y-2",children:[e.jsx("h2",{className:"font-bold",children:"JSON 預覽"}),e.jsx("textarea",{className:"w-full h-40 p-2 border rounded text-xs",readOnly:!0,value:JSON.stringify(t,null,2)}),t.meta.table_name&&e.jsxs("div",{className:"text-sm text-gray-600",children:["📎 Shortcode: ",e.jsxs("code",{children:['[harvard_table_preview id="',t.meta.table_name,'"]']})]}),e.jsxs("div",{className:"space-x-2",children:[e.jsx("button",{className:"bg-green-600 text-white px-4 py-2 rounded",onClick:o,children:"💾 儲存配置"}),e.jsx("button",{className:"bg-blue-500 text-white px-4 py-2 rounded",onClick:Y,children:"⬇ 下載 JSON"}),e.jsx("button",{className:"bg-gray-700 text-white px-4 py-2 rounded",onClick:()=>{const a=t.meta.table_name||"wp_ai_tasks",i=`${window.location.origin}/wp-admin/admin-post.php?action=add_htb_demo_page&table=${a}`;window.open(i,"_blank")},children:"📄 新增測試頁面"})]})]})]})}const V="",Z="",U=((S=window.HTB_CONFIG)==null?void 0:S.containerId)||"htb-root",O=document.getElementById(U);O&&y(O).render(e.jsx(M,{}))})(React,ReactDOM);


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src
檔名：index.jsx
==================================================
/**
 * File: src/index.jsx
 * Description: React 应用入口文件，挂载整个应用到后端管理页面的指定容器。
 * Author: Your Name
 * Date: 2025-03-30
 */

import React from 'react';
import { createRoot } from 'react-dom/client';
import App from './App';
import './index.css';
import './style.css';
// 获取通过 wp_localize_script 注入的容器 ID，如未注入则默认为 "htb-root"
const containerId = window.HTB_CONFIG?.containerId || 'htb-root';
const container = document.getElementById(containerId);

if (container) {
  const root = createRoot(container);
  root.render(<App />);
}


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/admin
檔名：menu.php
==================================================
<?php
/**
 * File: admin/menu.php
 * Description: 后台菜单注册文件，用于将 Harvard Table Builder 添加到 WordPress 管理后台菜单中。
 * Version: 1.0.0
 */

if ( ! defined( 'ABSPATH' ) ) {
    exit;
}

add_action( 'admin_menu', function() {
    add_menu_page(
        __( 'Harvard Table Builder', 'harvard-table-builder' ), // 页面标题
        __( 'HT Builder', 'harvard-table-builder' ),              // 菜单标题
        'manage_options',                                          // 权限要求
        'harvard-table-builder',                                   // 菜单 slug
        'htb_render_admin_page',                                   // 回调函数
        'dashicons-edit',                                          // 菜单图标
        80                                                         // 位置
    );
} );

/**
 * 后台页面渲染函数。
 * 此页面仅用于挂载 React 前端应用。
 */
function htb_render_admin_page() {
    ?>
    <div class="wrap">
        <h1><?php esc_html_e( 'Harvard Table Builder', 'harvard-table-builder' ); ?></h1>
        <!-- React 应用挂载容器 -->
        <div id="htb-root"></div>
    </div>
    <?php
}


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table
檔名：package-lock.json
==================================================
{
  "name": "harvard-table-builder",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "harvard-table-builder",
      "version": "1.0.0",
      "dependencies": {
        "react": "^18.2.0",
        "react-beautiful-dnd": "^13.1.0",
        "react-dom": "^18.2.0"
      },
      "devDependencies": {
        "@vitejs/plugin-react": "^4.0.0",
        "autoprefixer": "^10.4.15",
        "postcss": "^8.4.24",
        "tailwindcss": "^3.4.1",
        "vite": "^4.5.0"
      }
    },
    "node_modules/@alloc/quick-lru": {
      "version": "5.2.0",
      "resolved": "https://registry.npmmirror.com/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmmirror.com/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.26.2",
      "resolved": "https://registry.npmmirror.com/@babel/code-frame/-/code-frame-7.26.2.tgz",
      "integrity": "sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.25.9",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.26.8",
      "resolved": "https://registry.npmmirror.com/@babel/compat-data/-/compat-data-7.26.8.tgz",
      "integrity": "sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.26.10",
      "resolved": "https://registry.npmmirror.com/@babel/core/-/core-7.26.10.tgz",
      "integrity": "sha512-vMqyb7XCDMPvJFFOaT9kxtiRh42GwlZEg1/uIgtZshS5a/8OaduUfCi7kynKgc3Tw/6Uo2D+db9qBttghhmxwQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.26.2",
        "@babel/generator": "^7.26.10",
        "@babel/helper-compilation-targets": "^7.26.5",
        "@babel/helper-module-transforms": "^7.26.0",
        "@babel/helpers": "^7.26.10",
        "@babel/parser": "^7.26.10",
        "@babel/template": "^7.26.9",
        "@babel/traverse": "^7.26.10",
        "@babel/types": "^7.26.10",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.27.0",
      "resolved": "https://registry.npmmirror.com/@babel/generator/-/generator-7.27.0.tgz",
      "integrity": "sha512-VybsKvpiN1gU1sdMZIp7FcqphVVKEwcuj02x73uvcHE0PTihx1nlBcowYWhDwjpoAXRv43+gDzyggGnn1XZhVw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.27.0",
        "@babel/types": "^7.27.0",
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.27.0",
      "resolved": "https://registry.npmmirror.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.0.tgz",
      "integrity": "sha512-LVk7fbXml0H2xH34dFzKQ7TDZ2G4/rVTOrq9V+icbbadjbVxxeFeDsNHv2SrZeWoA+6ZiTyWYWtScEIW07EAcA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.26.8",
        "@babel/helper-validator-option": "^7.25.9",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.25.9",
      "resolved": "https://registry.npmmirror.com/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz",
      "integrity": "sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.25.9",
        "@babel/types": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.26.0",
      "resolved": "https://registry.npmmirror.com/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz",
      "integrity": "sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9",
        "@babel/traverse": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.26.5",
      "resolved": "https://registry.npmmirror.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz",
      "integrity": "sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.25.9",
      "resolved": "https://registry.npmmirror.com/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz",
      "integrity": "sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.25.9",
      "resolved": "https://registry.npmmirror.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz",
      "integrity": "sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.25.9",
      "resolved": "https://registry.npmmirror.com/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz",
      "integrity": "sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.27.0",
      "resolved": "https://registry.npmmirror.com/@babel/helpers/-/helpers-7.27.0.tgz",
      "integrity": "sha512-U5eyP/CTFPuNE3qk+WZMxFkp/4zUzdceQlfzf7DdGdhp+Fezd7HD+i8Y24ZuTMKX3wQBld449jijbGq6OdGNQg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.27.0",
        "@babel/types": "^7.27.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.27.0",
      "resolved": "https://registry.npmmirror.com/@babel/parser/-/parser-7.27.0.tgz",
      "integrity": "sha512-iaepho73/2Pz7w2eMS0Q5f83+0RKI7i4xmiYeBmDzfRVbQtTOG7Ts0S4HzJVsTMGI9keU8rNfuZr8DKfSt7Yyg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.27.0"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-self": {
      "version": "7.25.9",
      "resolved": "https://registry.npmmirror.com/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.25.9.tgz",
      "integrity": "sha512-y8quW6p0WHkEhmErnfe58r7x0A70uKphQm8Sp8cV7tjNQwK56sNVK0M73LK3WuYmsuyrftut4xAkjjgU0twaMg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-source": {
      "version": "7.25.9",
      "resolved": "https://registry.npmmirror.com/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.25.9.tgz",
      "integrity": "sha512-+iqjT8xmXhhYv4/uiYd8FNQsraMFZIfxVSqxxVSZP0WbbSAWvBXAul0m/zu+7Vv4O/3WtApy9pmaTMiumEZgfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.27.0",
      "resolved": "https://registry.npmmirror.com/@babel/runtime/-/runtime-7.27.0.tgz",
      "integrity": "sha512-VtPOkrdPHZsKc/clNqyi9WUA8TINkZ4cGk63UUE3u4pmB2k+ZMQRDuIOagv8UVd6j7k0T3+RRIb7beKTebNbcw==",
      "license": "MIT",
      "dependencies": {
        "regenerator-runtime": "^0.14.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.27.0",
      "resolved": "https://registry.npmmirror.com/@babel/template/-/template-7.27.0.tgz",
      "integrity": "sha512-2ncevenBqXI6qRMukPlXwHKHchC7RyMuu4xv5JBXRfOGVcTy1mXCD12qrp7Jsoxll1EV3+9sE4GugBVRjT2jFA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.26.2",
        "@babel/parser": "^7.27.0",
        "@babel/types": "^7.27.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.27.0",
      "resolved": "https://registry.npmmirror.com/@babel/traverse/-/traverse-7.27.0.tgz",
      "integrity": "sha512-19lYZFzYVQkkHkl4Cy4WrAVcqBkgvV2YM2TU3xG6DIwO7O3ecbDPfW3yM3bjAGcqcQHi+CCtjMR3dIEHxsd6bA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.26.2",
        "@babel/generator": "^7.27.0",
        "@babel/parser": "^7.27.0",
        "@babel/template": "^7.27.0",
        "@babel/types": "^7.27.0",
        "debug": "^4.3.1",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.27.0",
      "resolved": "https://registry.npmmirror.com/@babel/types/-/types-7.27.0.tgz",
      "integrity": "sha512-H45s8fVLYjbhFH62dIJ3WtmJ6RSPt/3DRO0ZcT2SUiYiQyz3BLVb9ADEnLl91m74aQPS3AzzeajZHYOalWe3bg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-string-parser": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/android-arm/-/android-arm-0.18.20.tgz",
      "integrity": "sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/android-arm64/-/android-arm64-0.18.20.tgz",
      "integrity": "sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/android-x64/-/android-x64-0.18.20.tgz",
      "integrity": "sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/darwin-arm64/-/darwin-arm64-0.18.20.tgz",
      "integrity": "sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/darwin-x64/-/darwin-x64-0.18.20.tgz",
      "integrity": "sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/freebsd-arm64/-/freebsd-arm64-0.18.20.tgz",
      "integrity": "sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/freebsd-x64/-/freebsd-x64-0.18.20.tgz",
      "integrity": "sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/linux-arm/-/linux-arm-0.18.20.tgz",
      "integrity": "sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/linux-arm64/-/linux-arm64-0.18.20.tgz",
      "integrity": "sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/linux-ia32/-/linux-ia32-0.18.20.tgz",
      "integrity": "sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/linux-loong64/-/linux-loong64-0.18.20.tgz",
      "integrity": "sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/linux-mips64el/-/linux-mips64el-0.18.20.tgz",
      "integrity": "sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/linux-ppc64/-/linux-ppc64-0.18.20.tgz",
      "integrity": "sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/linux-riscv64/-/linux-riscv64-0.18.20.tgz",
      "integrity": "sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/linux-s390x/-/linux-s390x-0.18.20.tgz",
      "integrity": "sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/linux-x64/-/linux-x64-0.18.20.tgz",
      "integrity": "sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/netbsd-x64/-/netbsd-x64-0.18.20.tgz",
      "integrity": "sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/openbsd-x64/-/openbsd-x64-0.18.20.tgz",
      "integrity": "sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/sunos-x64/-/sunos-x64-0.18.20.tgz",
      "integrity": "sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/win32-arm64/-/win32-arm64-0.18.20.tgz",
      "integrity": "sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/win32-ia32/-/win32-ia32-0.18.20.tgz",
      "integrity": "sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/@esbuild/win32-x64/-/win32-x64-0.18.20.tgz",
      "integrity": "sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@isaacs/cliui": {
      "version": "8.0.2",
      "resolved": "https://registry.npmmirror.com/@isaacs/cliui/-/cliui-8.0.2.tgz",
      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "string-width": "^5.1.2",
        "string-width-cjs": "npm:string-width@^4.2.0",
        "strip-ansi": "^7.0.1",
        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
        "wrap-ansi": "^8.1.0",
        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.8",
      "resolved": "https://registry.npmmirror.com/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz",
      "integrity": "sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/set-array": "^1.2.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmmirror.com/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.2.1",
      "resolved": "https://registry.npmmirror.com/@jridgewell/set-array/-/set-array-1.2.1.tgz",
      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.0",
      "resolved": "https://registry.npmmirror.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.25",
      "resolved": "https://registry.npmmirror.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmmirror.com/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmmirror.com/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmmirror.com/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@pkgjs/parseargs": {
      "version": "0.11.0",
      "resolved": "https://registry.npmmirror.com/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@types/babel__core": {
      "version": "7.20.5",
      "resolved": "https://registry.npmmirror.com/@types/babel__core/-/babel__core-7.20.5.tgz",
      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.20.7",
        "@babel/types": "^7.20.7",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "node_modules/@types/babel__generator": {
      "version": "7.6.8",
      "resolved": "https://registry.npmmirror.com/@types/babel__generator/-/babel__generator-7.6.8.tgz",
      "integrity": "sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__template": {
      "version": "7.4.4",
      "resolved": "https://registry.npmmirror.com/@types/babel__template/-/babel__template-7.4.4.tgz",
      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__traverse": {
      "version": "7.20.7",
      "resolved": "https://registry.npmmirror.com/@types/babel__traverse/-/babel__traverse-7.20.7.tgz",
      "integrity": "sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.20.7"
      }
    },
    "node_modules/@types/hoist-non-react-statics": {
      "version": "3.3.6",
      "resolved": "https://registry.npmmirror.com/@types/hoist-non-react-statics/-/hoist-non-react-statics-3.3.6.tgz",
      "integrity": "sha512-lPByRJUer/iN/xa4qpyL0qmL11DqNW81iU/IG1S3uvRUq4oKagz8VCxZjiWkumgt66YT3vOdDgZ0o32sGKtCEw==",
      "license": "MIT",
      "dependencies": {
        "@types/react": "*",
        "hoist-non-react-statics": "^3.3.0"
      }
    },
    "node_modules/@types/react": {
      "version": "19.0.12",
      "resolved": "https://registry.npmmirror.com/@types/react/-/react-19.0.12.tgz",
      "integrity": "sha512-V6Ar115dBDrjbtXSrS+/Oruobc+qVbbUxDFC1RSbRqLt5SYvxxyIDrSC85RWml54g+jfNeEMZhEj7wW07ONQhA==",
      "license": "MIT",
      "dependencies": {
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-redux": {
      "version": "7.1.34",
      "resolved": "https://registry.npmmirror.com/@types/react-redux/-/react-redux-7.1.34.tgz",
      "integrity": "sha512-GdFaVjEbYv4Fthm2ZLvj1VSCedV7TqE5y1kNwnjSdBOTXuRSgowux6J8TAct15T3CKBr63UMk+2CO7ilRhyrAQ==",
      "license": "MIT",
      "dependencies": {
        "@types/hoist-non-react-statics": "^3.3.0",
        "@types/react": "*",
        "hoist-non-react-statics": "^3.3.0",
        "redux": "^4.0.0"
      }
    },
    "node_modules/@vitejs/plugin-react": {
      "version": "4.3.4",
      "resolved": "https://registry.npmmirror.com/@vitejs/plugin-react/-/plugin-react-4.3.4.tgz",
      "integrity": "sha512-SCCPBJtYLdE8PX/7ZQAs1QAZ8Jqwih+0VBLum1EGqmCCQal+MIUqLCzj3ZUy8ufbC0cAM4LRlSTm7IQJwWT4ug==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/core": "^7.26.0",
        "@babel/plugin-transform-react-jsx-self": "^7.25.9",
        "@babel/plugin-transform-react-jsx-source": "^7.25.9",
        "@types/babel__core": "^7.20.5",
        "react-refresh": "^0.14.2"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "peerDependencies": {
        "vite": "^4.2.0 || ^5.0.0 || ^6.0.0"
      }
    },
    "node_modules/ansi-regex": {
      "version": "6.1.0",
      "resolved": "https://registry.npmmirror.com/ansi-regex/-/ansi-regex-6.1.0.tgz",
      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/ansi-styles": {
      "version": "6.2.1",
      "resolved": "https://registry.npmmirror.com/ansi-styles/-/ansi-styles-6.2.1.tgz",
      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmmirror.com/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmmirror.com/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/arg": {
      "version": "5.0.2",
      "resolved": "https://registry.npmmirror.com/arg/-/arg-5.0.2.tgz",
      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/autoprefixer": {
      "version": "10.4.21",
      "resolved": "https://registry.npmmirror.com/autoprefixer/-/autoprefixer-10.4.21.tgz",
      "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "browserslist": "^4.24.4",
        "caniuse-lite": "^1.0.30001702",
        "fraction.js": "^4.3.7",
        "normalize-range": "^0.1.2",
        "picocolors": "^1.1.1",
        "postcss-value-parser": "^4.2.0"
      },
      "bin": {
        "autoprefixer": "bin/autoprefixer"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      },
      "peerDependencies": {
        "postcss": "^8.1.0"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmmirror.com/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmmirror.com/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/brace-expansion": {
      "version": "2.0.1",
      "resolved": "https://registry.npmmirror.com/brace-expansion/-/brace-expansion-2.0.1.tgz",
      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmmirror.com/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.24.4",
      "resolved": "https://registry.npmmirror.com/browserslist/-/browserslist-4.24.4.tgz",
      "integrity": "sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "caniuse-lite": "^1.0.30001688",
        "electron-to-chromium": "^1.5.73",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.1"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmmirror.com/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001707",
      "resolved": "https://registry.npmmirror.com/caniuse-lite/-/caniuse-lite-1.0.30001707.tgz",
      "integrity": "sha512-3qtRjw/HQSMlDWf+X79N206fepf4SOOU6SQLMaq/0KkZLmSjPxAkBOQQ+FxbHKfHmYLZFfdWsO3KA90ceHPSnw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmmirror.com/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chokidar/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmmirror.com/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmmirror.com/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmmirror.com/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/commander": {
      "version": "4.1.1",
      "resolved": "https://registry.npmmirror.com/commander/-/commander-4.1.1.tgz",
      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmmirror.com/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmmirror.com/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/css-box-model": {
      "version": "1.2.1",
      "resolved": "https://registry.npmmirror.com/css-box-model/-/css-box-model-1.2.1.tgz",
      "integrity": "sha512-a7Vr4Q/kd/aw96bnJG332W9V9LkJO69JRcaCYDUqjp6/z0w6VcZjgAcTbgFxEPfBgdnAwlh3iwu+hLopa+flJw==",
      "license": "MIT",
      "dependencies": {
        "tiny-invariant": "^1.0.6"
      }
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmmirror.com/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmmirror.com/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "license": "MIT"
    },
    "node_modules/debug": {
      "version": "4.4.0",
      "resolved": "https://registry.npmmirror.com/debug/-/debug-4.4.0.tgz",
      "integrity": "sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmmirror.com/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmmirror.com/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmmirror.com/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.128",
      "resolved": "https://registry.npmmirror.com/electron-to-chromium/-/electron-to-chromium-1.5.128.tgz",
      "integrity": "sha512-bo1A4HH/NS522Ws0QNFIzyPcyUUNV/yyy70Ho1xqfGYzPUme2F/xr4tlEOuM6/A538U1vDA7a4XfCd1CKRegKQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmmirror.com/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/esbuild": {
      "version": "0.18.20",
      "resolved": "https://registry.npmmirror.com/esbuild/-/esbuild-0.18.20.tgz",
      "integrity": "sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=12"
      },
      "optionalDependencies": {
        "@esbuild/android-arm": "0.18.20",
        "@esbuild/android-arm64": "0.18.20",
        "@esbuild/android-x64": "0.18.20",
        "@esbuild/darwin-arm64": "0.18.20",
        "@esbuild/darwin-x64": "0.18.20",
        "@esbuild/freebsd-arm64": "0.18.20",
        "@esbuild/freebsd-x64": "0.18.20",
        "@esbuild/linux-arm": "0.18.20",
        "@esbuild/linux-arm64": "0.18.20",
        "@esbuild/linux-ia32": "0.18.20",
        "@esbuild/linux-loong64": "0.18.20",
        "@esbuild/linux-mips64el": "0.18.20",
        "@esbuild/linux-ppc64": "0.18.20",
        "@esbuild/linux-riscv64": "0.18.20",
        "@esbuild/linux-s390x": "0.18.20",
        "@esbuild/linux-x64": "0.18.20",
        "@esbuild/netbsd-x64": "0.18.20",
        "@esbuild/openbsd-x64": "0.18.20",
        "@esbuild/sunos-x64": "0.18.20",
        "@esbuild/win32-arm64": "0.18.20",
        "@esbuild/win32-ia32": "0.18.20",
        "@esbuild/win32-x64": "0.18.20"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmmirror.com/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmmirror.com/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmmirror.com/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmmirror.com/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmmirror.com/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/foreground-child": {
      "version": "3.3.1",
      "resolved": "https://registry.npmmirror.com/foreground-child/-/foreground-child-3.3.1.tgz",
      "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "cross-spawn": "^7.0.6",
        "signal-exit": "^4.0.1"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/fraction.js": {
      "version": "4.3.7",
      "resolved": "https://registry.npmmirror.com/fraction.js/-/fraction.js-4.3.7.tgz",
      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://github.com/sponsors/rawify"
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmmirror.com/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmmirror.com/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmmirror.com/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/glob": {
      "version": "10.4.5",
      "resolved": "https://registry.npmmirror.com/glob/-/glob-10.4.5.tgz",
      "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "foreground-child": "^3.1.0",
        "jackspeak": "^3.1.2",
        "minimatch": "^9.0.4",
        "minipass": "^7.1.2",
        "package-json-from-dist": "^1.0.0",
        "path-scurry": "^1.11.1"
      },
      "bin": {
        "glob": "dist/esm/bin.mjs"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmmirror.com/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmmirror.com/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmmirror.com/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/hoist-non-react-statics": {
      "version": "3.3.2",
      "resolved": "https://registry.npmmirror.com/hoist-non-react-statics/-/hoist-non-react-statics-3.3.2.tgz",
      "integrity": "sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "react-is": "^16.7.0"
      }
    },
    "node_modules/hoist-non-react-statics/node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmmirror.com/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
      "license": "MIT"
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmmirror.com/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmmirror.com/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmmirror.com/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmmirror.com/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmmirror.com/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmmirror.com/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmmirror.com/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/jackspeak": {
      "version": "3.4.3",
      "resolved": "https://registry.npmmirror.com/jackspeak/-/jackspeak-3.4.3.tgz",
      "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "@isaacs/cliui": "^8.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      },
      "optionalDependencies": {
        "@pkgjs/parseargs": "^0.11.0"
      }
    },
    "node_modules/jiti": {
      "version": "1.21.7",
      "resolved": "https://registry.npmmirror.com/jiti/-/jiti-1.21.7.tgz",
      "integrity": "sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jiti": "bin/jiti.js"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmmirror.com/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "license": "MIT"
    },
    "node_modules/jsesc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmmirror.com/jsesc/-/jsesc-3.1.0.tgz",
      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmmirror.com/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/lilconfig": {
      "version": "3.1.3",
      "resolved": "https://registry.npmmirror.com/lilconfig/-/lilconfig-3.1.3.tgz",
      "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/antonk52"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmmirror.com/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmmirror.com/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "license": "MIT",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmmirror.com/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/memoize-one": {
      "version": "5.2.1",
      "resolved": "https://registry.npmmirror.com/memoize-one/-/memoize-one-5.2.1.tgz",
      "integrity": "sha512-zYiwtZUcYyXKo/np96AGZAckk+FWWsUdJ3cHGGmld7+AhvcWmQyGCYUh1hc4Q/pkOhb65dQR/pqCyK0cOaHz4Q==",
      "license": "MIT"
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmmirror.com/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmmirror.com/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmmirror.com/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmmirror.com/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmmirror.com/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/mz": {
      "version": "2.7.0",
      "resolved": "https://registry.npmmirror.com/mz/-/mz-2.7.0.tgz",
      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0",
        "object-assign": "^4.0.1",
        "thenify-all": "^1.0.0"
      }
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmmirror.com/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmmirror.com/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmmirror.com/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmmirror.com/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmmirror.com/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmmirror.com/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/package-json-from-dist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmmirror.com/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
      "dev": true,
      "license": "BlueOak-1.0.0"
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmmirror.com/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmmirror.com/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/path-scurry": {
      "version": "1.11.1",
      "resolved": "https://registry.npmmirror.com/path-scurry/-/path-scurry-1.11.1.tgz",
      "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "lru-cache": "^10.2.0",
        "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
      },
      "engines": {
        "node": ">=16 || 14 >=14.18"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/path-scurry/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmmirror.com/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmmirror.com/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmmirror.com/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmmirror.com/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pirates": {
      "version": "4.0.7",
      "resolved": "https://registry.npmmirror.com/pirates/-/pirates-4.0.7.tgz",
      "integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.3",
      "resolved": "https://registry.npmmirror.com/postcss/-/postcss-8.5.3.tgz",
      "integrity": "sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.8",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-import": {
      "version": "15.1.0",
      "resolved": "https://registry.npmmirror.com/postcss-import/-/postcss-import-15.1.0.tgz",
      "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.0"
      }
    },
    "node_modules/postcss-js": {
      "version": "4.0.1",
      "resolved": "https://registry.npmmirror.com/postcss-js/-/postcss-js-4.0.1.tgz",
      "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "camelcase-css": "^2.0.1"
      },
      "engines": {
        "node": "^12 || ^14 || >= 16"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.4.21"
      }
    },
    "node_modules/postcss-load-config": {
      "version": "4.0.2",
      "resolved": "https://registry.npmmirror.com/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
      "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "lilconfig": "^3.0.0",
        "yaml": "^2.3.4"
      },
      "engines": {
        "node": ">= 14"
      },
      "peerDependencies": {
        "postcss": ">=8.0.9",
        "ts-node": ">=9.0.0"
      },
      "peerDependenciesMeta": {
        "postcss": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        }
      }
    },
    "node_modules/postcss-nested": {
      "version": "6.2.0",
      "resolved": "https://registry.npmmirror.com/postcss-nested/-/postcss-nested-6.2.0.tgz",
      "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "postcss-selector-parser": "^6.1.1"
      },
      "engines": {
        "node": ">=12.0"
      },
      "peerDependencies": {
        "postcss": "^8.2.14"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.1.2",
      "resolved": "https://registry.npmmirror.com/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmmirror.com/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmmirror.com/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "node_modules/prop-types/node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmmirror.com/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
      "license": "MIT"
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmmirror.com/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/raf-schd": {
      "version": "4.0.3",
      "resolved": "https://registry.npmmirror.com/raf-schd/-/raf-schd-4.0.3.tgz",
      "integrity": "sha512-tQkJl2GRWh83ui2DiPTJz9wEiMN20syf+5oKfB03yYP7ioZcJwsIK8FjrtLwH1m7C7e+Tt2yYBlrOpdT+dyeIQ==",
      "license": "MIT"
    },
    "node_modules/react": {
      "version": "18.3.1",
      "resolved": "https://registry.npmmirror.com/react/-/react-18.3.1.tgz",
      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-beautiful-dnd": {
      "version": "13.1.1",
      "resolved": "https://registry.npmmirror.com/react-beautiful-dnd/-/react-beautiful-dnd-13.1.1.tgz",
      "integrity": "sha512-0Lvs4tq2VcrEjEgDXHjT98r+63drkKEgqyxdA7qD3mvKwga6a5SscbdLPO2IExotU1jW8L0Ksdl0Cj2AF67nPQ==",
      "deprecated": "react-beautiful-dnd is now deprecated. Context and options: https://github.com/atlassian/react-beautiful-dnd/issues/2672",
      "license": "Apache-2.0",
      "dependencies": {
        "@babel/runtime": "^7.9.2",
        "css-box-model": "^1.2.0",
        "memoize-one": "^5.1.1",
        "raf-schd": "^4.0.2",
        "react-redux": "^7.2.0",
        "redux": "^4.0.4",
        "use-memo-one": "^1.1.1"
      },
      "peerDependencies": {
        "react": "^16.8.5 || ^17.0.0 || ^18.0.0",
        "react-dom": "^16.8.5 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/react-dom": {
      "version": "18.3.1",
      "resolved": "https://registry.npmmirror.com/react-dom/-/react-dom-18.3.1.tgz",
      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.2"
      },
      "peerDependencies": {
        "react": "^18.3.1"
      }
    },
    "node_modules/react-is": {
      "version": "17.0.2",
      "resolved": "https://registry.npmmirror.com/react-is/-/react-is-17.0.2.tgz",
      "integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==",
      "license": "MIT"
    },
    "node_modules/react-redux": {
      "version": "7.2.9",
      "resolved": "https://registry.npmmirror.com/react-redux/-/react-redux-7.2.9.tgz",
      "integrity": "sha512-Gx4L3uM182jEEayZfRbI/G11ZpYdNAnBs70lFVMNdHJI76XYtR+7m0MN+eAs7UHBPhWXcnFPaS+9owSCJQHNpQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.15.4",
        "@types/react-redux": "^7.1.20",
        "hoist-non-react-statics": "^3.3.2",
        "loose-envify": "^1.4.0",
        "prop-types": "^15.7.2",
        "react-is": "^17.0.2"
      },
      "peerDependencies": {
        "react": "^16.8.3 || ^17 || ^18"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        },
        "react-native": {
          "optional": true
        }
      }
    },
    "node_modules/react-refresh": {
      "version": "0.14.2",
      "resolved": "https://registry.npmmirror.com/react-refresh/-/react-refresh-0.14.2.tgz",
      "integrity": "sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmmirror.com/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "pify": "^2.3.0"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmmirror.com/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/redux": {
      "version": "4.2.1",
      "resolved": "https://registry.npmmirror.com/redux/-/redux-4.2.1.tgz",
      "integrity": "sha512-LAUYz4lc+Do8/g7aeRa8JkyDErK6ekstQaqWQrNRW//MY1TvCEpMtpTWvlQ+FPbWCx+Xixu/6SHt5N0HR+SB4w==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.9.2"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.14.1",
      "resolved": "https://registry.npmmirror.com/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz",
      "integrity": "sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==",
      "license": "MIT"
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmmirror.com/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmmirror.com/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rollup": {
      "version": "3.29.5",
      "resolved": "https://registry.npmmirror.com/rollup/-/rollup-3.29.5.tgz",
      "integrity": "sha512-GVsDdsbJzzy4S/v3dqWPJ7EfvZJfCHiDqe80IyrF59LYuP+e6U1LJoUqeuqRbwAWoMNoXivMNeNAOf5E22VA1w==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=14.18.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmmirror.com/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/scheduler": {
      "version": "0.23.2",
      "resolved": "https://registry.npmmirror.com/scheduler/-/scheduler-0.23.2.tgz",
      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmmirror.com/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmmirror.com/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmmirror.com/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/signal-exit": {
      "version": "4.1.0",
      "resolved": "https://registry.npmmirror.com/signal-exit/-/signal-exit-4.1.0.tgz",
      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmmirror.com/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "dev": true,
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmmirror.com/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/string-width-cjs": {
      "name": "string-width",
      "version": "4.2.3",
      "resolved": "https://registry.npmmirror.com/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmmirror.com/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmmirror.com/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/string-width-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmmirror.com/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi": {
      "version": "7.1.0",
      "resolved": "https://registry.npmmirror.com/strip-ansi/-/strip-ansi-7.1.0.tgz",
      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/strip-ansi-cjs": {
      "name": "strip-ansi",
      "version": "6.0.1",
      "resolved": "https://registry.npmmirror.com/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmmirror.com/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/sucrase": {
      "version": "3.35.0",
      "resolved": "https://registry.npmmirror.com/sucrase/-/sucrase-3.35.0.tgz",
      "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.2",
        "commander": "^4.0.0",
        "glob": "^10.3.10",
        "lines-and-columns": "^1.1.6",
        "mz": "^2.7.0",
        "pirates": "^4.0.1",
        "ts-interface-checker": "^0.1.9"
      },
      "bin": {
        "sucrase": "bin/sucrase",
        "sucrase-node": "bin/sucrase-node"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmmirror.com/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tailwindcss": {
      "version": "3.4.17",
      "resolved": "https://registry.npmmirror.com/tailwindcss/-/tailwindcss-3.4.17.tgz",
      "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@alloc/quick-lru": "^5.2.0",
        "arg": "^5.0.2",
        "chokidar": "^3.6.0",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.3.2",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "jiti": "^1.21.6",
        "lilconfig": "^3.1.3",
        "micromatch": "^4.0.8",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.1.1",
        "postcss": "^8.4.47",
        "postcss-import": "^15.1.0",
        "postcss-js": "^4.0.1",
        "postcss-load-config": "^4.0.2",
        "postcss-nested": "^6.2.0",
        "postcss-selector-parser": "^6.1.2",
        "resolve": "^1.22.8",
        "sucrase": "^3.35.0"
      },
      "bin": {
        "tailwind": "lib/cli.js",
        "tailwindcss": "lib/cli.js"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/thenify": {
      "version": "3.3.1",
      "resolved": "https://registry.npmmirror.com/thenify/-/thenify-3.3.1.tgz",
      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0"
      }
    },
    "node_modules/thenify-all": {
      "version": "1.6.0",
      "resolved": "https://registry.npmmirror.com/thenify-all/-/thenify-all-1.6.0.tgz",
      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "thenify": ">= 3.1.0 < 4"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/tiny-invariant": {
      "version": "1.3.3",
      "resolved": "https://registry.npmmirror.com/tiny-invariant/-/tiny-invariant-1.3.3.tgz",
      "integrity": "sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==",
      "license": "MIT"
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmmirror.com/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/ts-interface-checker": {
      "version": "0.1.13",
      "resolved": "https://registry.npmmirror.com/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
      "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmmirror.com/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/use-memo-one": {
      "version": "1.1.3",
      "resolved": "https://registry.npmmirror.com/use-memo-one/-/use-memo-one-1.1.3.tgz",
      "integrity": "sha512-g66/K7ZQGYrI6dy8GLpVcMsBp4s17xNkYJVSMvTEevGy3nDxHOfE6z8BVE22+5G5x7t3+bhzrlTDB7ObrEE0cQ==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmmirror.com/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/vite": {
      "version": "4.5.10",
      "resolved": "https://registry.npmmirror.com/vite/-/vite-4.5.10.tgz",
      "integrity": "sha512-f2ueoukYTMI/5kMMT7wW+ol3zL6z6PjN28zYrGKAjnbzXhRXWXPThD3uN6muCp+TbfXaDgGvRuPsg6mwVLaWwQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "esbuild": "^0.18.10",
        "postcss": "^8.4.27",
        "rollup": "^3.27.1"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      },
      "peerDependencies": {
        "@types/node": ">= 14",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.4.0"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        }
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmmirror.com/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "8.1.0",
      "resolved": "https://registry.npmmirror.com/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^6.1.0",
        "string-width": "^5.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs": {
      "name": "wrap-ansi",
      "version": "7.0.0",
      "resolved": "https://registry.npmmirror.com/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmmirror.com/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmmirror.com/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmmirror.com/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/wrap-ansi-cjs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmmirror.com/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmmirror.com/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmmirror.com/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/yaml": {
      "version": "2.7.1",
      "resolved": "https://registry.npmmirror.com/yaml/-/yaml-2.7.1.tgz",
      "integrity": "sha512-10ULxpnOCQXxJvBgxsn9ptjq6uviG/htZKk9veJGhlqn3w/DxQ631zFF+nlQXLwmImeS5amR2dl2U8sg6U9jsQ==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "yaml": "bin.mjs"
      },
      "engines": {
        "node": ">= 14"
      }
    }
  }
}


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table
檔名：package.json
==================================================
{
  "name": "harvard-table-builder",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "vite",
    "build": "vite build"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-beautiful-dnd": "^13.1.0"
  },
  "devDependencies": {
    "@vitejs/plugin-react": "^4.0.0",
    "tailwindcss": "^3.4.1",
    "postcss": "^8.4.24",
    "autoprefixer": "^10.4.15",
    "vite": "^4.5.0"
  }
}


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/admin
檔名：page-builder.php
==================================================
<?php
/**
 * File: admin/page-builder.php
 * Description: 后台页面模板文件，包含 React 挂载容器和必要的布局标记。
 * Version: 1.0.0
 */

if ( ! defined( 'ABSPATH' ) ) {
    exit;
}
?>
<div class="wrap">
    <h1><?php esc_html_e( 'Harvard Table Builder', 'harvard-table-builder' ); ?></h1>
    <div id="htb-root"></div>
</div>


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table
檔名：postcss.config.js
==================================================
/**
 * File: postcss.config.js
 * Description: PostCSS 配置文件，用于启用 TailwindCSS 与 autoprefixer 插件。
 * Author: Your Name
 * Date: 2025-03-30
 */

module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/includes
檔名：rest-endpoints.php
==================================================
<?php
/**
 * File: includes/rest-endpoints.php
 * Description: 注册 REST API 路由，用于数据表扫描、字段获取、配置保存/加载/下载。
 * Version: 1.0.0
 */

if ( ! defined( 'ABSPATH' ) ) {
    exit;
}


require_once __DIR__ . '/db-actions.php'; // 引入 DB 操作模組

add_action( 'rest_api_init', function () {

    /**
     * GET /harvardtable/v1/tables
     * 返回所有可用的数据库表名列表。
     */
    register_rest_route( 'harvardtable/v1', '/tables', array(
        'methods'             => 'GET',
        'callback'            => 'htb_get_tables',
        'permission_callback' => function() {
            return current_user_can( 'manage_options' );
        }
    ) );

    /**
     * GET /harvardtable/v1/table-columns?table=xxx
     * 根据请求参数中的 table 名称，返回该表的字段信息（使用 SHOW COLUMNS）。
     */
    register_rest_route( 'harvardtable/v1', '/table-columns', array(
        'methods'             => 'GET',
        'callback'            => 'htb_get_table_columns',
        'permission_callback' => function() {
            return current_user_can( 'manage_options' );
        },
        'args' => array(
            'table' => array(
                'required'          => true,
                'sanitize_callback' => 'sanitize_text_field',
            ),
        ),
    ) );

    /**
     * GET /harvardtable/v1/load-config?id=xxx
     * 根据配置 id 加载保存的 JSON 配置文件。
     */
    register_rest_route( 'harvardtable/v1', '/load-config', array(
        'methods'             => 'GET',
        'callback'            => 'htb_load_config',
        'permission_callback' => function() {
            return current_user_can( 'manage_options' );
        },
        'args' => array(
            'id' => array(
                'required'          => true,
                'sanitize_callback' => 'sanitize_text_field',
            ),
        ),
    ) );

    /**
     * POST /harvardtable/v1/save-config
     * 保存前端提交的配置 JSON 到插件的 configs 目录，并自动生成文件名。
     */
    register_rest_route( 'harvardtable/v1', '/save-config', array(
        'methods'             => 'POST',
        'callback'            => 'htb_save_config',
        'permission_callback' => function() {
            return current_user_can( 'manage_options' );
        },
    ) );

    /**
     * GET /harvardtable/v1/download?id=xxx
     * 根据配置 id 下载对应的 JSON 文件。
     */
    register_rest_route( 'harvardtable/v1', '/download', array(
        'methods'             => 'GET',
        'callback'            => 'htb_download_config',
        'permission_callback' => function() {
            return current_user_can( 'manage_options' );
        },
        'args' => array(
            'id' => array(
                'required'          => true,
                'sanitize_callback' => 'sanitize_text_field',
            ),
        ),
    ) );
/**
 * GET /harvardtable/v1/list-configs?table=xxx
 * 回傳 configs 資料夾中符合指定 table_name 的歷史配置檔名
 */
    
        register_rest_route('harvardtable/v1', '/list-configs', [
        'methods' => 'GET',
        'callback' => function (WP_REST_Request $request) {
            $table = sanitize_file_name($request->get_param('table'));
            $config_dir = HTB_PLUGIN_DIR . 'configs/';
            if (!is_dir($config_dir)) return [];

            $files = scandir($config_dir);
            $matched = array_filter($files, function ($f) use ($table) {
                return strpos($f, ".{$table}.") !== false && pathinfo($f, PATHINFO_EXTENSION) === 'json';
            });

            return array_values($matched);
        },
        'permission_callback' => function () {
            return current_user_can('manage_options');
        }
    ]);
    
    /**
 * POST /harvardtable/v1/apply-history
 * 傳入歷史檔案名稱，自動覆蓋主檔
 */
register_rest_route('harvardtable/v1', '/apply-history', [
    'methods' => 'POST',
    'callback' => function ( WP_REST_Request $request ) {
        $filename = sanitize_file_name( $request->get_param('filename') );
        $config_dir = HTB_PLUGIN_DIR . 'configs/';
        $src = $config_dir . $filename;

        // 從檔名中找出 table_name（假設為前綴）
        $table_name = explode('.', $filename)[0];
        $dest = $config_dir . "{$table_name}.json";

        if ( ! file_exists( $src ) ) {
            return new WP_Error( 'file_missing', '歷史檔案不存在', array( 'status' => 404 ) );
        }

        copy( $src, $dest );

        return rest_ensure_response([
            'success' => true,
            'message' => "已套用歷史版本：{$filename} → {$table_name}.json"
        ]);
    },
    'permission_callback' => function () {
        return current_user_can('manage_options');
    }
]);

register_rest_route('htb/v1', '/bulk-delete', [
  'methods' => 'POST',
  'callback' => function (WP_REST_Request $request) {
    global $wpdb;

    $table = sanitize_text_field($request->get_param('table'));
    $ids = $request->get_param('ids');

    if (empty($table) || !is_array($ids)) {
      return new WP_Error('invalid_request', '資料不完整', ['status' => 400]);
    }

    // 安全防呆：僅允許刪除以 wp_ 開頭的資料表
    if (strpos($table, 'wp_') !== 0) {
      return new WP_Error('unauthorized_table', '非法資料表名稱', ['status' => 403]);
    }

    // 執行批次刪除
    $id_placeholders = implode(',', array_fill(0, count($ids), '%d'));
    $sql = "DELETE FROM `$table` WHERE id IN ($id_placeholders)";
    $wpdb->query($wpdb->prepare($sql, array_map('intval', $ids)));

    return rest_ensure_response([
      'success' => true,
      'deleted' => count($ids),
    ]);
  },
  'permission_callback' => function () {
    return current_user_can('manage_options'); // 權限控管
  },
]);

  // ✅ 取得單筆資料（GET）
  register_rest_route('htb/v1', '/get-row', [
    'methods' => 'GET',
    'callback' => function (WP_REST_Request $request) {
      $table = sanitize_text_field($request->get_param('table'));
      $id = intval($request->get_param('id'));

      if (!$table || !$id) {
        return new WP_Error('invalid_param', '請提供 table 與 id', ['status' => 400]);
      }

      $row = htb_get_row_by_id($table, $id);
      return rest_ensure_response(['success' => true, 'row' => $row]);
    },
    'permission_callback' => function () {
      return current_user_can('read');
    }
  ]);

  // ✅ 建立資料（POST）
  register_rest_route('htb/v1', '/create-row', [
    'methods' => 'POST',
    'callback' => function (WP_REST_Request $request) {
      $table = sanitize_text_field($request->get_param('table'));
      $data = $request->get_param('data');

      if (!$table || !is_array($data)) {
        return new WP_Error('invalid_input', '缺少 table 或 data', ['status' => 400]);
      }

      $new_id = htb_create_row($table, $data);
      if (!$new_id) {
        return new WP_Error('create_failed', '建立失敗', ['status' => 500]);
      }

      return rest_ensure_response(['success' => true, 'id' => $new_id]);
    },
    'permission_callback' => function () {
      return current_user_can('edit_posts');
    }
  ]);

  // ✅ 更新資料（POST）
  register_rest_route('htb/v1', '/update-row', [
    'methods' => 'POST',
    'callback' => function (WP_REST_Request $request) {
      $table = sanitize_text_field($request->get_param('table'));
      $id = intval($request->get_param('id'));
      $data = $request->get_param('data');

      if (!$table || !$id || !is_array($data)) {
        return new WP_Error('invalid_input', '缺少 table / id / data', ['status' => 400]);
      }

      $ok = htb_update_row($table, $id, $data);
      if (!$ok) {
        return new WP_Error('update_failed', '更新失敗或無修改', ['status' => 500]);
      }

      return rest_ensure_response(['success' => true]);
    },
    'permission_callback' => function () {
      return current_user_can('edit_posts');
    }
  ]);
register_rest_route('htb/v1', '/delete-row', [
  'methods' => 'POST',
  'callback' => function (WP_REST_Request $request) {
    $table = sanitize_text_field($request['table']);
    $id = intval($request['id']);

    if (!$table || !$id) {
      return new WP_Error('invalid', '參數錯誤', ['status' => 400]);
    }

    $result = htb_delete_rows($table, [$id]);
    return rest_ensure_response(['success' => (bool) $result]);
  },
  'permission_callback' => function () {
    return current_user_can('manage_options');
  }
]);

});



/**
 * 获取所有数据库表名
 *
 * @return WP_REST_Response 返回表名数组。
 */
function htb_get_tables() {
    global $wpdb;
    $tables = $wpdb->get_col( 'SHOW TABLES' );
    return rest_ensure_response( $tables );
}

/**
 * 获取指定数据表的字段信息
 *
 * @param WP_REST_Request $request 请求对象，包含 table 参数。
 * @return WP_REST_Response 返回字段信息数组。
 */
function htb_get_table_columns( WP_REST_Request $request ) {
    global $wpdb;
    $table = $request->get_param( 'table' );
    // 为防止 SQL 注入，可在此增加表名白名单校验
    $columns = $wpdb->get_results( "SHOW COLUMNS FROM {$table}" );
    $fields = array();
    foreach ( $columns as $col ) {
        $fields[] = array(
            'Field'   => $col->Field,
            'Type'    => $col->Type,
            'Null'    => $col->Null,
            'Key'     => $col->Key,
            'Default' => $col->Default,
            'Extra'   => $col->Extra,
        );
    }
    return rest_ensure_response( $fields );
}

/**
 * 加载配置文件
 *
 * @param WP_REST_Request $request 请求对象，包含 id 参数。
 * @return WP_REST_Response|WP_Error 返回 JSON 配置数据或错误。
 */
function htb_load_config( WP_REST_Request $request ) {
    $id = $request->get_param( 'id' );
    $config_dir = HTB_PLUGIN_DIR . 'configs/';
    $filename = $config_dir . sanitize_file_name( $id ) . '.json';
    if ( ! file_exists( $filename ) ) {
        return new WP_Error( 'not_found', __( '配置文件不存在', 'harvard-table-builder' ), array( 'status' => 404 ) );
    }
    $json = file_get_contents( $filename );
    $data = json_decode( $json, true );
    if ( json_last_error() !== JSON_ERROR_NONE ) {
        return new WP_Error( 'invalid_json', __( '配置文件 JSON 格式错误', 'harvard-table-builder' ), array( 'status' => 500 ) );
    }
    return rest_ensure_response( $data );
}

/**
 * 保存配置文件
 *
 * 前端提交完整的配置 JSON，该函数验证必须字段，并生成文件名（格式：config-<id>.<table_name>.<YYYYMMDD-HHMM>.json）。
 *
 * @param WP_REST_Request $request 请求对象，包含 JSON 配置数据。
 * @return WP_REST_Response|WP_Error 返回保存成功信息或错误。
 */
function htb_save_config( WP_REST_Request $request ) {
    $data = $request->get_json_params();
    if ( empty( $data ) || ! is_array( $data ) ) {
        return new WP_Error( 'invalid_data', __( '配置数据无效', 'harvard-table-builder' ), array( 'status' => 400 ) );
    }

    $required_keys = array( 'meta', 'features', 'fields', 'logic', 'css' );
    foreach ( $required_keys as $key ) {
        if ( ! isset( $data[ $key ] ) ) {
            return new WP_Error( 'missing_section', sprintf( __( '缺少必要配置段落：%s', 'harvard-table-builder' ), $key ), array( 'status' => 400 ) );
        }
    }

    $meta = $data['meta'];
    if ( empty( $meta['id'] ) || empty( $meta['table_name'] ) ) {
        return new WP_Error( 'missing_meta', __( 'meta 中必须包含 id 和 table_name', 'harvard-table-builder' ), array( 'status' => 400 ) );
    }

    $table_name = sanitize_file_name( $meta['table_name'] );
    $id         = sanitize_file_name( $meta['id'] );
    $timestamp  = current_time( 'Ymd-Hi' );

    $config_dir = HTB_PLUGIN_DIR . 'configs/';
    if ( ! file_exists( $config_dir ) ) {
        mkdir( $config_dir, 0755, true );
    }

    // 修正 stable 版本：強制覆寫 ID
    $stable_data = $data;
    $stable_data['meta']['id'] = $table_name;
    $stable_data['meta']['title'] = $table_name;
    $stable_data['meta']['description'] = $table_name;

    $filename_stable    = "{$table_name}.json";
    $filename_versioned = "{$table_name}.{$timestamp}.json";

    $filepath_stable    = $config_dir . $filename_stable;
    $filepath_versioned = $config_dir . $filename_versioned;

    if ( false === file_put_contents( $filepath_stable, json_encode( $stable_data, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE ) ) ) {
        return new WP_Error( 'save_failed', __( '保存主版本失败', 'harvard-table-builder' ), array( 'status' => 500 ) );
    }

    if ( false === file_put_contents( $filepath_versioned, json_encode( $data, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE ) ) ) {
        return new WP_Error( 'save_failed', __( '保存历史版本失败', 'harvard-table-builder' ), array( 'status' => 500 ) );
    }

    return rest_ensure_response( array(
        'success'  => true,
        'filename' => $filename_versioned,
        'stable'   => $filename_stable,
    ) );
}





/**
 * 下载配置文件
 *
 * 根据请求参数 id 读取对应的 JSON 文件，并输出以供下载。
 *
 * @param WP_REST_Request $request 请求对象，包含 id 参数。
 */
function htb_download_config( WP_REST_Request $request ) {
    $id = $request->get_param( 'id' );
    $config_dir = HTB_PLUGIN_DIR . 'configs/';
    $filename = $config_dir . sanitize_file_name( $id ) . '.json';
    if ( ! file_exists( $filename ) ) {
        return new WP_Error( 'not_found', __( '配置文件不存在', 'harvard-table-builder' ), array( 'status' => 404 ) );
    }
    // 设置 HTTP 头并输出文件内容
    header( 'Content-Type: application/json' );
    header( 'Content-Disposition: attachment; filename="' . basename( $filename ) . '"' );
    readfile( $filename );
    exit;
}



目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/assets/js
檔名：scripts.js
==================================================
jQuery(function ($) {
  // Helper: 顯示彈窗
  function showModal(title, content) {
    const modal = $(`
      <div class="htb-modal-overlay">
        <div class="htb-modal">
          <h3>${title}</h3>
          <div class="htb-modal-body">${content}</div>
          <button class="htb-modal-close">關閉</button>
        </div>
      </div>
    `);
    $("body").append(modal);
    modal.on("click", ".htb-modal-close", () => modal.remove());
  }

  // 檢視資料
  $(document).on("click", ".htb-action-view", function () {
    const id = $(this).data("id");
    $.get(`${window.HTB_CONFIG.rest_url}/row?id=${id}`, function (data) {
      let html = "<table>";
      for (const key in data) {
        html += `<tr><td><strong>${key}</strong></td><td>${data[key]}</td></tr>`;
      }
      html += "</table>";
      showModal("檢視資料", html);
    }).fail(function () {
      alert("❌ 無法載入資料");
    });
  });

  // 編輯資料
  $(document).on("click", ".htb-action-edit", function () {
    const id = $(this).data("id");
    $.get(`${window.HTB_CONFIG.rest_url}/row?id=${id}`, function (data) {
      let html = '<form class="htb-edit-form">';
      for (const key in data) {
        html += `<label>${key}<br><input name="${key}" value="${data[key]}" /></label><br>`;
      }
      html += `<input type="hidden" name="id" value="${id}">`;
      html += `<button type="submit">儲存</button></form>`;
      showModal("編輯資料", html);
    }).fail(function () {
      alert("❌ 無法載入編輯資料");
    });
  });

  // 編輯送出
  $(document).on("submit", ".htb-edit-form", function (e) {
    e.preventDefault();
    const formData = $(this).serialize();
    $.post(`${window.HTB_CONFIG.rest_url}/update`, formData, function () {
      alert("✅ 更新成功");
      location.reload();
    }).fail(function () {
      alert("❌ 更新失敗");
    });
  });

  // ✅ 單筆刪除（使用 bulk-delete API）
  $(document).on("click", ".htb-action-delete", function () {
    const id = $(this).data("id");
    if (!confirm(`確定刪除資料 #${id}？`)) return;
    $.ajax({
      url: window.HTB_CONFIG.rest_url + "/bulk-delete",
      method: "POST",
      headers: {
        "X-WP-Nonce": window.HTB_CONFIG.nonce,
        "Content-Type": "application/json"
      },
      data: JSON.stringify({
        table: window.HTB_CONFIG.table_name,
        ids: [id]
      }),
      success: function (res) {
        if (res.success) {
          alert("✅ 已刪除");
          $(`tr[data-id="${id}"]`).remove();
        } else {
          alert("❌ 刪除失敗");
        }
      },
      error: function () {
        alert("❌ AJAX 錯誤，請稍後重試");
      }
    });
  });

  // 單筆複製
  $(document).on("click", ".htb-action-copy", function () {
    const row = $(this).closest("tr");
    const rowData = {};
    row.find("td").each((i, td) => {
      rowData[`col${i}`] = $(td).text().trim();
    });
    navigator.clipboard.writeText(JSON.stringify(rowData, null, 2))
      .then(() => alert("📋 已複製 JSON"))
      .catch(() => alert("❌ 複製失敗"));
  });

  // ✅ 全選控制
  $("#htb-select-all").on("change", function () {
    $(".htb-row-checkbox").prop("checked", this.checked);
  });

  // ✅ 批次操作：刪除 / 複製
  $(".htb-bulk-btn").on("click", function () {
    const action = $(this).data("action");
    const selectedIds = $(".htb-row-checkbox:checked").map(function () {
      return $(this).val();
    }).get();

    if (selectedIds.length === 0) {
      alert("請先勾選要操作的資料");
      return;
    }

    if (action === "copy") {
      const jsonArray = [];
      $(".htb-row-checkbox:checked").each(function () {
        const $row = $(this).closest("tr");
        const rowData = {};
        $row.find("td").each(function (i) {
          const th = $("thead th").eq(i);
          const key = th.text().trim().toLowerCase();
          const val = $(this).text().trim();
          if (key !== "操作" && key !== "") {
            rowData[key] = val;
          }
        });
        jsonArray.push(rowData);
      });
      const json = JSON.stringify(jsonArray, null, 2);
      navigator.clipboard.writeText(json)
        .then(() => alert(`✅ 已複製 ${selectedIds.length} 筆資料為 JSON`))
        .catch(() => alert("❌ 複製失敗"));
    }

    if (action === "delete") {
      if (!confirm(`確定刪除 ${selectedIds.length} 筆資料？`)) return;
      $.ajax({
        url: window.HTB_CONFIG.rest_url + "/bulk-delete",
        method: "POST",
        headers: {
          "X-WP-Nonce": window.HTB_CONFIG.nonce,
          "Content-Type": "application/json"
        },
        data: JSON.stringify({
          table: window.HTB_CONFIG.table_name,
          ids: selectedIds
        }),
        success: function (res) {
          if (res.success) {
            selectedIds.forEach(id => {
              $(`tr[data-id="${id}"]`).remove();
            });
            alert(`✅ 已成功刪除 ${selectedIds.length} 筆資料`);
          } else {
            alert(`❌ 刪除失敗：${res.message || "未知錯誤"}`);
          }
        },
        error: function () {
          alert("❌ AJAX 請求失敗");
        }
      });
    }
  });
});


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/src
檔名：style.css
==================================================
/* ========= 表格主題樣式 ========= */

/* 預設淺灰主題 */
.htb-theme-light thead {
  background-color: #e5e7eb; /* 明顯一點 */
  color: #111827;
}

/* 藍灰科技風 */
.htb-theme-blue thead {
  background-color: #1e3a8a;
  color: white;
}

/* 綠色清新風 */
.htb-theme-green thead {
  background-color: #16a34a;
  color: white;
}

/* 深色專業風 */
.htb-theme-dark thead {
  background-color: #1f2937;
  color: #d1d5db;
}


/* ========= 表格結構樣式 ========= */

.htb-live-table thead th {
  font-weight: bold;
  padding: 8px;
  text-align: left;
  border-bottom: 2px solid #555;
}

.htb-live-table tbody td {
  padding: 6px 8px;
}

.htb-live-table tbody tr:nth-child(even) {
  background-color: #f9f9f9;
}

.htb-live-table tbody tr:hover {
  background-color: #fffde7;
}

/* ========= Modal 彈窗 ========= */

.htb-modal-overlay {
  position: fixed;
  z-index: 9999;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0, 0, 0, 0.4);
  display: flex;
  align-items: center;
  justify-content: center;
}

.htb-modal {
  background: #fff;
  padding: 1.5em;
  border-radius: 8px;
  max-width: 600px;
  width: 90%;
}

.htb-modal h3 {
  margin-top: 0;
}

.htb-modal-close {
  margin-top: 1em;
  float: right;
}

/* ========= 表單 ========= */

.htb-edit-form input {
  width: 100%;
  margin-bottom: 0.5em;
}

.htb-live-table.dataTable thead th {
  background-color: #2c2c2c !important;
  color: #ffffff !important;
  font-weight: bold !important;
}

table.dataTable thead th {
  background-color: #2c2c2c !important;
  color: #ffffff !important;
}


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/assets
檔名：style.css
==================================================
*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/*! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
 */*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}.container{width:100%}@media (min-width: 640px){.container{max-width:640px}}@media (min-width: 768px){.container{max-width:768px}}@media (min-width: 1024px){.container{max-width:1024px}}@media (min-width: 1280px){.container{max-width:1280px}}@media (min-width: 1536px){.container{max-width:1536px}}.visible{visibility:visible}.mb-1{margin-bottom:.25rem}.mb-2{margin-bottom:.5rem}.mb-4{margin-bottom:1rem}.ml-5{margin-left:1.25rem}.mr-2{margin-right:.5rem}.block{display:block}.flex{display:flex}.table{display:table}.h-40{height:10rem}.h-96{height:24rem}.max-h-40{max-height:10rem}.w-full{width:100%}.cursor-pointer{cursor:pointer}.list-disc{list-style-type:disc}.items-center{align-items:center}.justify-between{justify-content:space-between}.space-x-1>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.25rem * var(--tw-space-x-reverse));margin-left:calc(.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse: 0;border-top-width:calc(1px * calc(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px * var(--tw-divide-y-reverse))}.overflow-auto{overflow:auto}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.rounded{border-radius:.25rem}.border{border-width:1px}.bg-blue-500{--tw-bg-opacity: 1;background-color:rgb(59 130 246 / var(--tw-bg-opacity, 1))}.bg-gray-100{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.bg-gray-700{--tw-bg-opacity: 1;background-color:rgb(55 65 81 / var(--tw-bg-opacity, 1))}.bg-green-600{--tw-bg-opacity: 1;background-color:rgb(22 163 74 / var(--tw-bg-opacity, 1))}.p-1{padding:.25rem}.p-2{padding:.5rem}.p-4{padding:1rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.text-center{text-align:center}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-semibold{font-weight:600}.text-blue-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity, 1))}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity, 1))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.text-green-600{--tw-text-opacity: 1;color:rgb(22 163 74 / var(--tw-text-opacity, 1))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.hover\:bg-gray-100:hover{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.hover\:underline:hover{text-decoration-line:underline}.htb-theme-light thead{background-color:#e5e7eb;color:#111827}.htb-theme-blue thead{background-color:#1e3a8a;color:#fff}.htb-theme-green thead{background-color:#16a34a;color:#fff}.htb-theme-dark thead{background-color:#1f2937;color:#d1d5db}.htb-theme-light tbody td,.htb-theme-blue tbody td,.htb-theme-green tbody td,.htb-theme-dark tbody td{font-style:italic}.htb-live-table thead th{font-weight:700;padding:8px;text-align:left;border-bottom:2px solid #555}.htb-live-table tbody td{padding:6px 8px}.htb-live-table tbody tr:nth-child(2n){background-color:#f9f9f9}.htb-live-table tbody tr:hover{background-color:#fffde7}.htb-modal-overlay{position:fixed;z-index:9999;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.4);display:flex;align-items:center;justify-content:center}.htb-modal{background:#fff;padding:1.5em;border-radius:8px;max-width:600px;width:90%}.htb-modal h3{margin-top:0}.htb-modal-close{margin-top:1em;float:right}.htb-edit-form input{width:100%;margin-bottom:.5em}.htb-live-table.dataTable thead th{background-color:#2c2c2c!important;color:#fff!important;font-weight:700!important}table.dataTable thead th{background-color:#2c2c2c!important;color:#fff!important}


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/assets/build
檔名：style.css
==================================================
*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/*! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
 */*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}.container{width:100%}@media (min-width: 640px){.container{max-width:640px}}@media (min-width: 768px){.container{max-width:768px}}@media (min-width: 1024px){.container{max-width:1024px}}@media (min-width: 1280px){.container{max-width:1280px}}@media (min-width: 1536px){.container{max-width:1536px}}.visible{visibility:visible}.mb-1{margin-bottom:.25rem}.mb-2{margin-bottom:.5rem}.mb-4{margin-bottom:1rem}.ml-5{margin-left:1.25rem}.mr-2{margin-right:.5rem}.mt-4{margin-top:1rem}.block{display:block}.flex{display:flex}.table{display:table}.h-40{height:10rem}.h-96{height:24rem}.max-h-40{max-height:10rem}.w-full{width:100%}.cursor-pointer{cursor:pointer}.list-disc{list-style-type:disc}.items-center{align-items:center}.justify-between{justify-content:space-between}.space-x-1>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.25rem * var(--tw-space-x-reverse));margin-left:calc(.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse: 0;border-top-width:calc(1px * calc(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px * var(--tw-divide-y-reverse))}.overflow-auto{overflow:auto}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.rounded{border-radius:.25rem}.border{border-width:1px}.border-t{border-top-width:1px}.bg-blue-500{--tw-bg-opacity: 1;background-color:rgb(59 130 246 / var(--tw-bg-opacity, 1))}.bg-gray-700{--tw-bg-opacity: 1;background-color:rgb(55 65 81 / var(--tw-bg-opacity, 1))}.bg-green-600{--tw-bg-opacity: 1;background-color:rgb(22 163 74 / var(--tw-bg-opacity, 1))}.p-1{padding:.25rem}.p-2{padding:.5rem}.p-4{padding:1rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.pt-4{padding-top:1rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-semibold{font-weight:600}.text-blue-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity, 1))}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity, 1))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.text-green-600{--tw-text-opacity: 1;color:rgb(22 163 74 / var(--tw-text-opacity, 1))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.hover\:bg-gray-100:hover{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.hover\:underline:hover{text-decoration-line:underline}.htb-theme-light thead{background-color:#e5e7eb;color:#111827}.htb-theme-blue thead{background-color:#1e3a8a;color:#fff}.htb-theme-green thead{background-color:#16a34a;color:#fff}.htb-theme-dark thead{background-color:#1f2937;color:#d1d5db}.htb-live-table thead th{font-weight:700;padding:8px;text-align:left;border-bottom:2px solid #555}.htb-live-table tbody td{padding:6px 8px}.htb-live-table tbody tr:nth-child(2n){background-color:#f9f9f9}.htb-live-table tbody tr:hover{background-color:#fffde7}.htb-modal-overlay{position:fixed;z-index:9999;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.4);display:flex;align-items:center;justify-content:center}.htb-modal{background:#fff;padding:1.5em;border-radius:8px;max-width:600px;width:90%}.htb-modal h3{margin-top:0}.htb-modal-close{margin-top:1em;float:right}.htb-edit-form input{width:100%;margin-bottom:.5em}.htb-live-table.dataTable thead th{background-color:#2c2c2c!important;color:#fff!important;font-weight:700!important}table.dataTable thead th{background-color:#2c2c2c!important;color:#fff!important}


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/assets/css
檔名：style.css
==================================================
/* ========= 表格主題樣式 ========= */

/* 預設淺灰主題 */
.htb-theme-light thead {
  background-color: #e5e7eb; /* 明顯一點 */
  color: #111827;
}

/* 藍灰科技風 */
.htb-theme-blue thead {
  background-color: #1e3a8a;
  color: white;
}

/* 綠色清新風 */
.htb-theme-green thead {
  background-color: #16a34a;
  color: white;
}

/* 深色專業風 */
.htb-theme-dark thead {
  background-color: #1f2937;
  color: #d1d5db;
}

/* 主題共通樣式 */
.htb-theme-light tbody td,
.htb-theme-blue tbody td,
.htb-theme-green tbody td,
.htb-theme-dark tbody td {
  font-style: italic;
}

/* ========= 表格結構樣式 ========= */

.htb-live-table thead th {
  font-weight: bold;
  padding: 8px;
  text-align: left;
  border-bottom: 2px solid #555;
}

.htb-live-table tbody td {
  padding: 6px 8px;
}

.htb-live-table tbody tr:nth-child(even) {
  background-color: #f9f9f9;
}

.htb-live-table tbody tr:hover {
  background-color: #fffde7;
}

/* ========= Modal 彈窗 ========= */

.htb-modal-overlay {
  position: fixed;
  z-index: 9999;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0, 0, 0, 0.4);
  display: flex;
  align-items: center;
  justify-content: center;
}

.htb-modal {
  background: #fff;
  padding: 1.5em;
  border-radius: 8px;
  max-width: 600px;
  width: 90%;
}

.htb-modal h3 {
  margin-top: 0;
}

.htb-modal-close {
  margin-top: 1em;
  float: right;
}

/* ========= 表單 ========= */

.htb-edit-form input {
  width: 100%;
  margin-bottom: 0.5em;
}

.htb-live-table.dataTable thead th {
  background-color: #2c2c2c !important;
  color: #ffffff !important;
  font-weight: bold !important;
}

table.dataTable thead th {
  background-color: #000000 !important;
  color: #fff !important;
}


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table
檔名：tailwind.config.js
==================================================
/**
 * File: tailwind.config.js
 * Description: TailwindCSS 配置文件，配置需要扫描的内容目录及主题扩展。
 * Author: Your Name
 * Date: 2025-03-30
 */

module.exports = {
  content: [
    './src/**/*.{js,jsx,ts,tsx}',
    './admin/**/*.{php,html}'
  ],
  theme: {
    extend: {},
  },
  plugins: [],
};


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table
檔名：vite.config.js
==================================================
/**
 * File: vite.config.js
 * Description: Vite 构建配置文件，用于打包 React 前端应用至 assets/build 目录。
 * 修复了构建时 "process is not defined" 报错。
 * Author: Your Name
 * Date: 2025-03-30
 */

import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';

export default defineConfig({
  plugins: [react()],
  build: {
    outDir: path.resolve(__dirname, 'assets/build'),
    emptyOutDir: true,
    lib: {
      entry: path.resolve(__dirname, 'src/index.jsx'),
      name: 'HarvardTableBuilder',
      formats: ['iife'], // 使用 IIFE 格式用于 WordPress 加载
      fileName: () => 'index.js'
    },
    rollupOptions: {
      external: ['react', 'react-dom'], // 使用 WordPress 内置 React
      output: {
        globals: {
          react: 'React',
          'react-dom': 'ReactDOM'
        }
      }
    }
  },
  define: {
    'process.env.NODE_ENV': JSON.stringify('production') // ✅ 解决构建后运行时报错
  },
  resolve: {
    alias: {
      '@': path.resolve(__dirname, 'src')
    }
  }
});


目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/configs
檔名：wp_acg_images.json
==================================================
{
    "meta": {
        "id": "wp_acg_images",
        "title": "wp_acg_images",
        "table_name": "wp_acg_images",
        "shortcode": "",
        "created_at": "",
        "description": "wp_acg_images"
    },
    "features": {
        "search": true,
        "pagination": true,
        "sortable": true,
        "bulk_select": false,
        "bulk_actions": [
            "delete"
        ],
        "row_actions": [
            "delete"
        ],
        "default_sort": {
            "field": "",
            "direction": "asc"
        }
    },
    "fields": {
        "id": {
            "key": "id",
            "label": "id",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 1
        },
        "task_id": {
            "key": "task_id",
            "label": "task_id",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 2
        },
        "file_name": {
            "key": "file_name",
            "label": "file_name",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 3,
            "format": {
                "href": "https:\/\/xart004.heatgroups.top\/wp-content\/plugins\/ai_post_generator\/AI_image\/{value}",
                "target": "_blank",
                "image": {
                    "src": "https:\/\/xart004.heatgroups.top\/wp-content\/plugins\/ai_post_generator\/AI_image\/{value}",
                    "popup_url": "https:\/\/xart004.heatgroups.top\/wp-content\/plugins\/ai_post_generator\/AI_image\/{value}"
                }
            }
        },
        "type": {
            "key": "type",
            "label": "type",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 4
        },
        "created_at": {
            "key": "created_at",
            "label": "created_at",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 5
        }
    },
    "logic": [],
    "css": {
        "table_theme": "dart"
    }
}

目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/configs
檔名：wp_acg_tasks.20250331-0433.json
==================================================
{
    "meta": {
        "id": "wp_acg_tasks",
        "title": "wp_acg_tasks_20250331_1233",
        "table_name": "wp_acg_tasks",
        "shortcode": "",
        "created_at": "",
        "description": "wp_acg_tasks_20250331_1233"
    },
    "features": {
        "search": true,
        "pagination": true,
        "sortable": true,
        "bulk_select": false,
        "bulk_actions": [
            "delete"
        ],
        "row_actions": [
            "delete"
        ],
        "default_sort": {
            "field": "",
            "direction": "asc"
        }
    },
    "fields": {
        "id": {
            "key": "id",
            "label": "id",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 1
        },
        "user_id": {
            "key": "user_id",
            "label": "user_id",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 2
        },
        "title": {
            "key": "title",
            "label": "title",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 3
        },
        "content": {
            "key": "content",
            "label": "content",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 4
        },
        "status": {
            "key": "status",
            "label": "status",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 5
        },
        "post_id": {
            "key": "post_id",
            "label": "post_id",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 6
        },
        "error_message": {
            "key": "error_message",
            "label": "error_message",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 7
        },
        "qwen_prompt": {
            "key": "qwen_prompt",
            "label": "qwen_prompt",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 8
        },
        "qwen_api_response": {
            "key": "qwen_api_response",
            "label": "qwen_api_response",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 9
        },
        "sd_prompt": {
            "key": "sd_prompt",
            "label": "sd_prompt",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 10
        },
        "sd_api_response": {
            "key": "sd_api_response",
            "label": "sd_api_response",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 11
        },
        "post_api_response": {
            "key": "post_api_response",
            "label": "post_api_response",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 12
        },
        "created_at": {
            "key": "created_at",
            "label": "created_at",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 13
        },
        "updated_at": {
            "key": "updated_at",
            "label": "updated_at",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 14
        }
    },
    "logic": [],
    "css": {
        "table_theme": "light"
    }
}

目錄：/www/wwwroot/xart004.heatgroups.top/wp-content/plugins/harvard-table/configs
檔名：wp_acg_tasks.json
==================================================
{
    "meta": {
        "id": "wp_acg_tasks",
        "title": "wp_acg_tasks",
        "table_name": "wp_acg_tasks",
        "shortcode": "",
        "created_at": "",
        "description": "wp_acg_tasks"
    },
    "features": {
        "search": true,
        "pagination": true,
        "sortable": true,
        "bulk_select": false,
        "bulk_actions": [
            "delete"
        ],
        "row_actions": [
            "delete"
        ],
        "default_sort": {
            "field": "",
            "direction": "asc"
        }
    },
    "fields": {
        "id": {
            "key": "id",
            "label": "id",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 1
        },
        "user_id": {
            "key": "user_id",
            "label": "user_id",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 2
        },
        "title": {
            "key": "title",
            "label": "title",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 3
        },
        "content": {
            "key": "content",
            "label": "content",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 4
        },
        "status": {
            "key": "status",
            "label": "status",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 5
        },
        "post_id": {
            "key": "post_id",
            "label": "post_id",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 6
        },
        "error_message": {
            "key": "error_message",
            "label": "error_message",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 7
        },
        "qwen_prompt": {
            "key": "qwen_prompt",
            "label": "qwen_prompt",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 8
        },
        "qwen_api_response": {
            "key": "qwen_api_response",
            "label": "qwen_api_response",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 9
        },
        "sd_prompt": {
            "key": "sd_prompt",
            "label": "sd_prompt",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 10
        },
        "sd_api_response": {
            "key": "sd_api_response",
            "label": "sd_api_response",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 11
        },
        "post_api_response": {
            "key": "post_api_response",
            "label": "post_api_response",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 12
        },
        "created_at": {
            "key": "created_at",
            "label": "created_at",
            "type": "text",
            "visible": false,
            "sortable": false,
            "order": 13
        },
        "updated_at": {
            "key": "updated_at",
            "label": "updated_at",
            "type": "text",
            "visible": true,
            "sortable": true,
            "order": 14
        }
    },
    "logic": [],
    "css": {
        "table_theme": "light"
    }
}

